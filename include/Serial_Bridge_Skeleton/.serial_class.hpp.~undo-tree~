(undo-tree-save-format-version . 1)
"c4bae96df83aee869ce195d4767fa3504c936b40"
[nil nil nil nil (26352 19201 558837 150000) 0 nil]
([nil nil ((nil rear-nonsticky nil 6454 . 6455) (nil fontified nil 4061 . 6455) (nil fontified nil 4060 . 4061) (nil fontified nil 286 . 4060) (nil fontified nil 285 . 286) (nil fontified nil 264 . 285) (nil fontified nil 262 . 264) (nil fontified nil 241 . 262) (nil fontified nil 240 . 241) (nil fontified nil 217 . 240) (nil fontified nil 215 . 217) (nil fontified nil 196 . 215) (nil fontified nil 195 . 196) (nil fontified nil 175 . 195) (nil fontified nil 174 . 175) (nil fontified nil 157 . 174) (nil fontified nil 156 . 157) (nil fontified nil 137 . 156) (nil fontified nil 136 . 137) (nil fontified nil 118 . 136) (nil fontified nil 117 . 118) (nil fontified nil 99 . 117) (nil fontified nil 98 . 99) (nil fontified nil 80 . 98) (nil fontified nil 79 . 80) (nil fontified nil 61 . 79) (nil fontified nil 60 . 61) (nil fontified nil 42 . 60) (nil fontified nil 41 . 42) (nil fontified nil 23 . 41) (nil fontified nil 22 . 23) (nil fontified nil 2 . 22) (nil fontified nil 1 . 2) (1 . 6455) (t 26352 19201 558877 646000)) nil (26352 19210 655629 136000) 0 nil])
([nil nil ((apply -30 6250 6485 undo--wrap-and-run-primitive-undo 6250 6485 ((6480 . 6483) (6465 . 6468) (6445 . 6448) (6437 . 6440) (6392 . 6395) (6375 . 6378) (6335 . 6338) (6299 . 6302) (6267 . 6270) (6250 . 6253)))) nil (26352 19210 655623 314000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . 5408) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (t 26352 19210 694989 200000)) nil (26352 19466 183817 806000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 5409) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (26352 19466 183797 466000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -5412) (undo-tree-id112 . -6) 5418 (5412 . 5418) (#("      " 0 6 (fontified nil)) . 5411) (undo-tree-id113 . -6) (5410 . 5418) (t 26352 19466 223092 822000)) nil (26352 19499 4872 636000) 0 nil])
([nil nil ((5452 . 5453) (apply yas--snippet-revive 5418 5452 #s(yas--snippet nil (#s(yas--field 1 5425 5432 nil nil nil t #s(yas--field 2 5434 5435 nil nil nil t #s(yas--field 3 5437 5451 nil nil nil t nil))) #s(yas--field 2 5434 5435 nil nil nil t #s(yas--field 3 5437 5451 nil nil nil t nil)) #s(yas--field 3 5437 5451 nil nil nil t nil)) nil 2 nil #s(yas--field 3 5437 5451 nil nil nil t nil) nil nil)) (5444 . 5450) (#("buf" 0 3 (fontified nil)) . 5444) (5444 . 5447) (#("buffer" 0 6 (fontified nil)) . -5444) (undo-tree-id100 . -6) (5444 . 5450) (#("buff" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5444) (undo-tree-id101 . -4) (undo-tree-id102 . -4) 5448 (5444 . 5448) (apply yas--snippet-revive 5437 5445 #s(yas--snippet nil nil #s(yas--exit 5444 nil) 3 nil nil #s(yas--field 3 5437 5451 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5444 nil) 3 nil nil #s(yas--field 3 5437 5451 nil nil nil t nil) nil)) (5437 . 5445) (#("sizeof($0)" 0 10 (fontified nil)) . 5437) (5437 . 5447) (#("siz" 0 3 (fontified nil)) . 5437) (5437 . 5440) (#("sizeof(expression-or-type)" 0 26 (fontified nil)) . -5437) (undo-tree-id103 . -26) (5437 . 5463) (#("sizeof" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t)) . -5437) (undo-tree-id104 . -6) (undo-tree-id105 . -6) 5443 (5442 . 5443) (5438 . 5442) (#("size_t n" 0 8 (fontified nil)) . 5438) (5437 . 5438) (#("int c" 0 3 (face font-lock-type-face fontified nil) 3 4 (fontified nil) 4 5 (face font-lock-variable-name-face fontified nil)) . 5435) (5434 . 5435) (5426 . 5432) (#("bu" 0 2 (fontified nil)) . 5426) (5426 . 5428) (#("buffer" 0 6 (fontified nil)) . -5426) (undo-tree-id106 . -6) (5426 . 5432) (#("bu" 0 1 (fontified t) 1 2 (fontified t)) . -5426) (undo-tree-id107 . -2) (undo-tree-id108 . -2) 5428 (5426 . 5428) (#("void *s" 0 4 (face font-lock-type-face fontified nil) 4 6 (fontified nil) 6 7 (face font-lock-variable-name-face fontified nil)) . 5426) (5425 . 5426) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5425 5432 nil nil nil t #s(yas--field 2 5434 5435 nil nil nil t #s(yas--field 3 5437 5451 nil nil nil t nil))) #s(yas--field 2 5434 5435 nil nil nil t #s(yas--field 3 5437 5451 nil nil nil t nil)) #s(yas--field 3 5437 5451 nil nil nil t nil)) nil 2 nil #s(yas--field 3 5437 5451 nil nil nil t nil) nil nil)) (5418 . 5450) (#("memset(${1:void *s}, ${2:int c}, ${3:size_t n})" 0 47 (fontified nil)) . 5418) (5418 . 5465) (#("me" 0 2 (fontified nil)) . 5418) (5418 . 5420) (#("memset(void *s, int c, size_t n)" 0 32 (fontified nil)) . -5418) (undo-tree-id109 . -32) (5418 . 5450) (#("memset" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5418) (undo-tree-id110 . -6) (undo-tree-id111 . -6) 5424 (5423 . 5424) (5418 . 5423) (5412 . 5418)) nil (26352 19499 4868 244000) 0 nil])
([nil nil ((#("      buffer = 0;
" 0 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 5393) (undo-tree-id98 . -17) (undo-tree-id99 . -16) 5409) nil (26352 19499 4862 293000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5393) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1)) nil (26352 19499 4860 763000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -5436) (undo-tree-id93 . -6) 5442 (5436 . 5442) (#("      " 0 6 (fontified nil)) . 5435) (undo-tree-id94 . -6) (5434 . 5442)) nil (26352 19499 4858 613000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -5435) (undo-tree-id92 . -6) 5441 (5434 . 5441)) nil (26352 19499 4856 931000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -5394) (undo-tree-id90 . -6) 5400 (5394 . 5400) (#("      " 0 6 (fontified nil)) . 5393) (undo-tree-id91 . -6) (5392 . 5400)) nil (26352 19499 4854 148000) 0 nil])
([nil nil ((5394 . 5400)) nil (26353 48695 216984 283000) 0 nil])
([nil nil ((5412 . 5436) (#("f" 0 1 (face font-lock-comment-face fontified nil)) . 5412) (5394 . 5413) (#("      " 0 5 (fontified t) 5 6 (fontified t)) . 5394) (undo-tree-id4322 . -5) (undo-tree-id4323 . -5) (undo-tree-id4324 . -5) (undo-tree-id4325 . -5) (undo-tree-id4326 . -5) (undo-tree-id4327 . -5) (undo-tree-id4328 . -5) (undo-tree-id4329 . -5) (undo-tree-id4330 . -5) (undo-tree-id4331 . -5) (undo-tree-id4332 . -5) (undo-tree-id4333 . -5) (undo-tree-id4334 . -5) (undo-tree-id4335 . -5) (undo-tree-id4336 . -5) (undo-tree-id4337 . -5) (undo-tree-id4338 . -5) (undo-tree-id4339 . -5) (undo-tree-id4340 . -5) (undo-tree-id4341 . -5) (undo-tree-id4342 . -5) (undo-tree-id4343 . -5) (undo-tree-id4344 . -5) (undo-tree-id4345 . -5) (undo-tree-id4346 . -5) (undo-tree-id4347 . -5) (undo-tree-id4348 . -5) (undo-tree-id4349 . -5) (undo-tree-id4350 . -5) (undo-tree-id4351 . -5) (undo-tree-id4352 . -5) (undo-tree-id4353 . -5) (undo-tree-id4354 . -5) (undo-tree-id4355 . -5) (undo-tree-id4356 . -5) (undo-tree-id4357 . -5) (undo-tree-id4358 . -5) (undo-tree-id4359 . -5) (undo-tree-id4360 . -5) (undo-tree-id4361 . -5) (undo-tree-id4362 . -5) (undo-tree-id4363 . -5) (undo-tree-id4364 . -5) (undo-tree-id4365 . -5) (undo-tree-id4366 . -5) (undo-tree-id4367 . -5) (undo-tree-id4368 . -5) (undo-tree-id4369 . -5) (undo-tree-id4370 . -5) (undo-tree-id4371 . -5) (undo-tree-id4372 . -5) (undo-tree-id4373 . -5) (undo-tree-id4374 . -5) (undo-tree-id4375 . -5) (undo-tree-id4376 . -5) (undo-tree-id4377 . -5) (undo-tree-id4378 . -5) (undo-tree-id4379 . -5) (undo-tree-id4380 . -5) (undo-tree-id4381 . -5) (undo-tree-id4382 . -5) (undo-tree-id4383 . -5) (undo-tree-id4384 . -5) (undo-tree-id4385 . -5) (undo-tree-id4386 . -5) (undo-tree-id4387 . -5) (undo-tree-id4388 . -5) (undo-tree-id4389 . -5) (undo-tree-id4390 . -5) (undo-tree-id4391 . -5) (undo-tree-id4392 . -5) (undo-tree-id4393 . -5) (undo-tree-id4394 . -5) (undo-tree-id4395 . -5) (undo-tree-id4396 . -5) (undo-tree-id4397 . -5) (undo-tree-id4398 . -5) (undo-tree-id4399 . -5) (undo-tree-id4400 . -5) (undo-tree-id4401 . -5) (undo-tree-id4402 . -5) (undo-tree-id4403 . -5) (undo-tree-id4404 . -5) (undo-tree-id4405 . -5) (undo-tree-id4406 . -5) (undo-tree-id4407 . -5) (undo-tree-id4408 . -5) (undo-tree-id4409 . -5) (undo-tree-id4410 . -5) (undo-tree-id4411 . -5) (undo-tree-id4412 . -5) (undo-tree-id4413 . -5) (undo-tree-id4414 . -5) (undo-tree-id4415 . -5) (undo-tree-id4416 . -5) (undo-tree-id4417 . -5) (undo-tree-id4418 . -5) (undo-tree-id4419 . -5) (undo-tree-id4420 . -5) (undo-tree-id4421 . -5) (undo-tree-id4422 . -5) (undo-tree-id4423 . -5) (undo-tree-id4424 . -5) (undo-tree-id4425 . -5) (undo-tree-id4426 . -5) (undo-tree-id4427 . -5) (undo-tree-id4428 . -5) (undo-tree-id4429 . -5) (undo-tree-id4430 . -5) (undo-tree-id4431 . -5) (undo-tree-id4432 . -5) (undo-tree-id4433 . -5) (undo-tree-id4434 . -5) (undo-tree-id4435 . -5) (undo-tree-id4436 . -5) (undo-tree-id4437 . -5) (undo-tree-id4438 . -5) (undo-tree-id4439 . -5) (undo-tree-id4440 . -5) (undo-tree-id4441 . -5) (undo-tree-id4442 . -5) (undo-tree-id4443 . -5) (undo-tree-id4444 . -5) (undo-tree-id4445 . -5) (undo-tree-id4446 . -5) (undo-tree-id4447 . -5) (undo-tree-id4448 . -5) (undo-tree-id4449 . -5) (undo-tree-id4450 . -5) (undo-tree-id4451 . -5) (undo-tree-id4452 . -5) (undo-tree-id4453 . -5) (undo-tree-id4454 . -5) (undo-tree-id4455 . -5) (undo-tree-id4456 . -5) (undo-tree-id4457 . -5) (undo-tree-id4458 . -5) (undo-tree-id4459 . -5) (undo-tree-id4460 . -5) (undo-tree-id4461 . -5) (undo-tree-id4462 . -5) (undo-tree-id4463 . -5) (undo-tree-id4464 . -5) (undo-tree-id4465 . -5) (undo-tree-id4466 . -5) (undo-tree-id4467 . -5) (undo-tree-id4468 . -5) (undo-tree-id4469 . -5) (undo-tree-id4470 . -5) (undo-tree-id4471 . -5) (undo-tree-id4472 . -5) (undo-tree-id4473 . -5) (undo-tree-id4474 . -5) (undo-tree-id4475 . -5) (undo-tree-id4476 . -5) (undo-tree-id4477 . -5) (undo-tree-id4478 . -5) (undo-tree-id4479 . -5) (undo-tree-id4480 . -5) (undo-tree-id4481 . -5) (undo-tree-id4482 . -5)) ((5394 . 5400) (#("      " 0 6 (fontified nil c-is-sws t c-in-sws t)) . 5394) (#("//" 0 1 (fontified nil c-in-sws t c-is-sws t) 1 2 (fontified nil c-in-sws t)) . 5400) (#(" fill the f" 0 10 (fontified nil c-in-sws t) 10 11 (face font-lock-comment-face fontified nil)) . 5402) (5412 . 5413) (#("buffer with zeros" 0 17 (fontified nil c-in-sws t)) . 5412) (#("
      " 0 1 (c-in-sws t) 1 7 (c-in-sws t c-is-sws t)) . 5429)) (26353 48697 543184 523000) 0 nil])
([nil nil ((#("9600" 0 4 (fontified t)) . 5135) (undo-tree-id4483 . -4) (undo-tree-id4484 . -3)) nil (26353 48709 555558 856000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -543) 545 (543 . 545) (#("  " 0 2 (fontified nil)) . 542) (542 . 545) (#("  " 0 2 (fontified nil)) . 541) (540 . 544) (t 26352 19499 42480 717000)) ((#("
  
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 540) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (541 . 543) (#("  
" 0 2 (fontified nil) 2 3 (fontified nil)) . 542) (542 . 544) (#("  " 0 2 (fontified nil)) . 543) (543 . 545)) (26353 48693 851245 269000) 0 nil])
([nil nil ((5135 . 5141)) nil (26353 48709 555548 128000) 0 nil])
([nil nil ((541 . 543)) ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 541) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1)) (26353 48693 235999 527000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5224) (undo-tree-id4620 . -4) (undo-tree-id4621 . -4) 5228 (5224 . 5228) (#("    " 0 4 (fontified nil)) . 5223) (undo-tree-id4622 . -4) (undo-tree-id4623 . -4) (5222 . 5228) (t 26353 48709 595283 714000)) nil (26353 49411 535264 154000) 0 nil])
([nil nil ((545 . 546) (543 . 545) (541 . 543) (#(" " 0 1 (fontified nil)) . -541) (#(" " 0 1 (fontified t)) . 542)) ((541 . 543) (#("  " 0 2 (c-is-sws t c-in-sws t fontified nil)) . 541) (undo-tree-id3286 . -2) (undo-tree-id3287 . -2) (undo-tree-id3288 . -2) (undo-tree-id3289 . -2) (undo-tree-id3290 . -2) (undo-tree-id3291 . -2) (undo-tree-id3292 . -2) (undo-tree-id3293 . -2) (undo-tree-id3294 . -2) (undo-tree-id3295 . -2) (undo-tree-id3296 . -2) (undo-tree-id3297 . -2) (undo-tree-id3298 . -2) (undo-tree-id3299 . -2) (undo-tree-id3300 . -2) (undo-tree-id3301 . -2) (undo-tree-id3302 . -2) (undo-tree-id3303 . -2) (undo-tree-id3304 . -2) (undo-tree-id3305 . -2) (undo-tree-id3306 . -2) (undo-tree-id3307 . -2) (undo-tree-id3308 . -2) (undo-tree-id3309 . -2) (undo-tree-id3310 . -2) (undo-tree-id3311 . -2) (undo-tree-id3312 . -2) (undo-tree-id3313 . -2) (undo-tree-id3314 . -2) (undo-tree-id3315 . -2) (undo-tree-id3316 . -2) (undo-tree-id3317 . -2) (undo-tree-id3318 . -2) (undo-tree-id3319 . -2) (undo-tree-id3320 . -2) (undo-tree-id3321 . -2) (undo-tree-id3322 . -2) (undo-tree-id3323 . -2) (undo-tree-id3324 . -2) (undo-tree-id3325 . -2) (undo-tree-id3326 . -2) (undo-tree-id3327 . -2) (undo-tree-id3328 . -2) (undo-tree-id3329 . -2) (undo-tree-id3330 . -2) (undo-tree-id3331 . -2) (undo-tree-id3332 . -2) (undo-tree-id3333 . -2) (undo-tree-id3334 . -2) (undo-tree-id3335 . -2) (undo-tree-id3336 . -2) (undo-tree-id3337 . -2) (undo-tree-id3338 . -2) (undo-tree-id3339 . -2) (undo-tree-id3340 . -2) (undo-tree-id3341 . -2) (undo-tree-id3342 . -2) (undo-tree-id3343 . -2) (undo-tree-id3344 . -2) (undo-tree-id3345 . -2) (undo-tree-id3346 . -2) (undo-tree-id3347 . -2) (undo-tree-id3348 . -2) (undo-tree-id3349 . -2) (undo-tree-id3350 . -2) (undo-tree-id3351 . -2) (undo-tree-id3352 . -2) (undo-tree-id3353 . -2) (undo-tree-id3354 . -2) (undo-tree-id3355 . -2) (undo-tree-id3356 . -2) (undo-tree-id3357 . -2) (undo-tree-id3358 . -2) (undo-tree-id3359 . -2) (undo-tree-id3360 . -2) (undo-tree-id3361 . -2) (undo-tree-id3362 . -2) (undo-tree-id3363 . -2) (undo-tree-id3364 . -2) (undo-tree-id3365 . -2) (undo-tree-id3366 . -2) (undo-tree-id3367 . -2) (undo-tree-id3368 . -2) (undo-tree-id3369 . -2) (undo-tree-id3370 . -2) (undo-tree-id3371 . -2) (undo-tree-id3372 . -2) (undo-tree-id3373 . -2) (undo-tree-id3374 . -2) (undo-tree-id3375 . -2) (undo-tree-id3376 . -2) (undo-tree-id3377 . -2) (undo-tree-id3378 . -2) (undo-tree-id3379 . -2) (undo-tree-id3380 . -2) (undo-tree-id3381 . -2) (undo-tree-id3382 . -2) (undo-tree-id3383 . -2) (undo-tree-id3384 . -2) (undo-tree-id3385 . -2) (undo-tree-id3386 . -2) (undo-tree-id3387 . -2) (undo-tree-id3388 . -2) (undo-tree-id3389 . -2) (undo-tree-id3390 . -2) (undo-tree-id3391 . -2) (undo-tree-id3392 . -2) (undo-tree-id3393 . -2) (undo-tree-id3394 . -2) (undo-tree-id3395 . -2) (undo-tree-id3396 . -2) (undo-tree-id3397 . -2) (undo-tree-id3398 . -2) (undo-tree-id3399 . -2) (undo-tree-id3400 . -2) (undo-tree-id3401 . -2) (undo-tree-id3402 . -2) (undo-tree-id3403 . -2) (undo-tree-id3404 . -2) (undo-tree-id3405 . -2) (undo-tree-id3406 . -2) (undo-tree-id3407 . -2) (undo-tree-id3408 . -2) (undo-tree-id3409 . -2) (undo-tree-id3410 . -2) (undo-tree-id3411 . -2) (undo-tree-id3412 . -2) (undo-tree-id3413 . -2) (undo-tree-id3414 . -2) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . -2) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2) (undo-tree-id3426 . -2) (undo-tree-id3427 . -2) (undo-tree-id3428 . -2) (undo-tree-id3429 . -2) (undo-tree-id3430 . -2) (undo-tree-id3431 . -2) (undo-tree-id3432 . -2) (undo-tree-id3433 . -2) (undo-tree-id3434 . -2) (undo-tree-id3435 . -2) (undo-tree-id3436 . -2) (undo-tree-id3437 . -2) (undo-tree-id3438 . -2) (undo-tree-id3439 . -2) (undo-tree-id3440 . -2) (undo-tree-id3441 . -2) (undo-tree-id3442 . -2) (undo-tree-id3443 . -2) (undo-tree-id3444 . -2) (undo-tree-id3445 . -2) (undo-tree-id3446 . -2) (undo-tree-id3447 . -2) (undo-tree-id3448 . -2) (undo-tree-id3449 . -2) (undo-tree-id3450 . -2) (undo-tree-id3451 . -2) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) (undo-tree-id3454 . -2) (undo-tree-id3455 . -2) (undo-tree-id3456 . -2) (undo-tree-id3457 . -2) (undo-tree-id3458 . -2) (undo-tree-id3459 . -2) (undo-tree-id3460 . -2) (undo-tree-id3461 . -2) (undo-tree-id3462 . -2) (undo-tree-id3463 . -2) (undo-tree-id3464 . -2) (undo-tree-id3465 . -2) (undo-tree-id3466 . -2) (undo-tree-id3467 . -2) (undo-tree-id3468 . -2) (undo-tree-id3469 . -2) (undo-tree-id3470 . -2) (undo-tree-id3471 . -2) (undo-tree-id3472 . -2) (undo-tree-id3473 . -2) (undo-tree-id3474 . -2) (undo-tree-id3475 . -2) (undo-tree-id3476 . -2) (undo-tree-id3477 . -2) (undo-tree-id3478 . -2) (undo-tree-id3479 . -2) (undo-tree-id3480 . -2) (undo-tree-id3481 . -2) (undo-tree-id3482 . -2) (undo-tree-id3483 . -2) (undo-tree-id3484 . -2) (undo-tree-id3485 . -2) (undo-tree-id3486 . -2) (undo-tree-id3487 . -2) (undo-tree-id3488 . -2) (undo-tree-id3489 . -2) (undo-tree-id3490 . -2) (undo-tree-id3491 . -2) (undo-tree-id3492 . -2) (undo-tree-id3493 . -2) (undo-tree-id3494 . -2) (undo-tree-id3495 . -2) (undo-tree-id3496 . -2) (undo-tree-id3497 . -2) (undo-tree-id3498 . -2) (undo-tree-id3499 . -2) (undo-tree-id3500 . -2) (undo-tree-id3501 . -2) (undo-tree-id3502 . -2) (undo-tree-id3503 . -2) (undo-tree-id3504 . -2) (undo-tree-id3505 . -2) (undo-tree-id3506 . -2) (undo-tree-id3507 . -2) (undo-tree-id3508 . -2) (undo-tree-id3509 . -2) (undo-tree-id3510 . -2) (undo-tree-id3511 . -2) (undo-tree-id3512 . -2) (undo-tree-id3513 . -2) (undo-tree-id3514 . -2) (undo-tree-id3515 . -2) (undo-tree-id3516 . -2) (undo-tree-id3517 . -2) (undo-tree-id3518 . -2) (undo-tree-id3519 . -2) (undo-tree-id3520 . -2) (undo-tree-id3521 . -2) (undo-tree-id3522 . -2) (undo-tree-id3523 . -2) (undo-tree-id3524 . -2) (undo-tree-id3525 . -2) (undo-tree-id3526 . -2) (undo-tree-id3527 . -2) (undo-tree-id3528 . -2) (undo-tree-id3529 . -2) (undo-tree-id3530 . -2) (undo-tree-id3531 . -2) (undo-tree-id3532 . -2) (undo-tree-id3533 . -2) (undo-tree-id3534 . -2) (undo-tree-id3535 . -2) (undo-tree-id3536 . -2) (undo-tree-id3537 . -2) (undo-tree-id3538 . -2) (undo-tree-id3539 . -2) (undo-tree-id3540 . -2) (undo-tree-id3541 . -2) (undo-tree-id3542 . -2) (undo-tree-id3543 . -2) (undo-tree-id3544 . -2) (undo-tree-id3545 . -2) (undo-tree-id3546 . -2) (undo-tree-id3547 . -2) (undo-tree-id3548 . -2) (undo-tree-id3549 . -2) (undo-tree-id3550 . -2) (undo-tree-id3551 . -2) (undo-tree-id3552 . -2) (undo-tree-id3553 . -2) (undo-tree-id3554 . -2) (undo-tree-id3555 . -2) (undo-tree-id3556 . -2) (undo-tree-id3557 . -2) (undo-tree-id3558 . -2) (undo-tree-id3559 . -2) (undo-tree-id3560 . -2) (undo-tree-id3561 . -2) (undo-tree-id3562 . -2) (undo-tree-id3563 . -2) (undo-tree-id3564 . -2) (undo-tree-id3565 . -2) (undo-tree-id3566 . -2) (undo-tree-id3567 . -2) (undo-tree-id3568 . -2) (undo-tree-id3569 . -2) (undo-tree-id3570 . -2) (undo-tree-id3571 . -2) (undo-tree-id3572 . -2) (undo-tree-id3573 . -2) (undo-tree-id3574 . -2) (undo-tree-id3575 . -2) (undo-tree-id3576 . -2) (undo-tree-id3577 . -2) (undo-tree-id3578 . -2) (undo-tree-id3579 . -2) (undo-tree-id3580 . -2) (undo-tree-id3581 . -2) (undo-tree-id3582 . -2) (undo-tree-id3583 . -2) (undo-tree-id3584 . -2) (undo-tree-id3585 . -2) (undo-tree-id3586 . -2) (undo-tree-id3587 . -2) (undo-tree-id3588 . -2) (undo-tree-id3589 . -2) (undo-tree-id3590 . -2) (undo-tree-id3591 . -2) (undo-tree-id3592 . -2) (undo-tree-id3593 . -2) (undo-tree-id3594 . -2) (undo-tree-id3595 . -2) (undo-tree-id3596 . -2) (undo-tree-id3597 . -2) (undo-tree-id3598 . -2) (undo-tree-id3599 . -2) (undo-tree-id3600 . -2) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -2) (undo-tree-id3604 . -2) (undo-tree-id3605 . -2) (undo-tree-id3606 . -2) (undo-tree-id3607 . -2) (undo-tree-id3608 . -2) (undo-tree-id3609 . -2) (undo-tree-id3610 . -2) (undo-tree-id3611 . -2) (undo-tree-id3612 . -2) (undo-tree-id3613 . -2) (undo-tree-id3614 . -2) (undo-tree-id3615 . -2) (undo-tree-id3616 . -2) (undo-tree-id3617 . -2) (undo-tree-id3618 . -2) (undo-tree-id3619 . -2) (undo-tree-id3620 . -2) (undo-tree-id3621 . -2) (undo-tree-id3622 . -2) (undo-tree-id3623 . -2) (undo-tree-id3624 . -2) (undo-tree-id3625 . -2) (undo-tree-id3626 . -2) (undo-tree-id3627 . -2) (undo-tree-id3628 . -2) (undo-tree-id3629 . -2) (undo-tree-id3630 . -2) (undo-tree-id3631 . -2) (undo-tree-id3632 . -2) (undo-tree-id3633 . -2) (undo-tree-id3634 . -2) (undo-tree-id3635 . -2) (undo-tree-id3636 . -2) (undo-tree-id3637 . -2) (undo-tree-id3638 . -2) (undo-tree-id3639 . -2) (undo-tree-id3640 . -2) (undo-tree-id3641 . -2) (undo-tree-id3642 . -2) (undo-tree-id3643 . -2) (undo-tree-id3644 . -2) (undo-tree-id3645 . -2) (undo-tree-id3646 . -2) (undo-tree-id3647 . -2) (undo-tree-id3648 . -2) (undo-tree-id3649 . -2) (undo-tree-id3650 . -2) (undo-tree-id3651 . -2) (undo-tree-id3652 . -2) (undo-tree-id3653 . -2) (undo-tree-id3654 . -2) (undo-tree-id3655 . -2) (undo-tree-id3656 . -2) (undo-tree-id3657 . -2) (undo-tree-id3658 . -2) (undo-tree-id3659 . -2) (undo-tree-id3660 . -2) (undo-tree-id3661 . -2) (undo-tree-id3662 . -2) (undo-tree-id3663 . -2) (undo-tree-id3664 . -2) (undo-tree-id3665 . -2) (undo-tree-id3666 . -2) (undo-tree-id3667 . -2) (undo-tree-id3668 . -2) (undo-tree-id3669 . -2) (undo-tree-id3670 . -2) (undo-tree-id3671 . -2) (undo-tree-id3672 . -2) (undo-tree-id3673 . -2) (undo-tree-id3674 . -2) (undo-tree-id3675 . -2) (undo-tree-id3676 . -2) (undo-tree-id3677 . -2) (undo-tree-id3678 . -2) (undo-tree-id3679 . -2) (undo-tree-id3680 . -2) (undo-tree-id3681 . -2) (undo-tree-id3682 . -2) (undo-tree-id3683 . -2) (undo-tree-id3684 . -2) (undo-tree-id3685 . -2) (undo-tree-id3686 . -2) (undo-tree-id3687 . -2) (undo-tree-id3688 . -2) (undo-tree-id3689 . -2) (undo-tree-id3690 . -2) (undo-tree-id3691 . -2) (undo-tree-id3692 . -2) (undo-tree-id3693 . -2) (undo-tree-id3694 . -2) (undo-tree-id3695 . -2) (undo-tree-id3696 . -2) (undo-tree-id3697 . -2) (undo-tree-id3698 . -2) (undo-tree-id3699 . -2) (undo-tree-id3700 . -2) (undo-tree-id3701 . -2) (undo-tree-id3702 . -2) (undo-tree-id3703 . -2) (undo-tree-id3704 . -2) (undo-tree-id3705 . -2) (undo-tree-id3706 . -2) (undo-tree-id3707 . -2) (undo-tree-id3708 . -2) (undo-tree-id3709 . -2) (undo-tree-id3710 . -2) (undo-tree-id3711 . -2) (undo-tree-id3712 . -2) (undo-tree-id3713 . -2) (undo-tree-id3714 . -2) (#("//" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified nil) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified nil)) . 543) (undo-tree-id3715 . -2) (undo-tree-id3716 . -2) (undo-tree-id3717 . -2) (undo-tree-id3718 . -2) (undo-tree-id3719 . -2) (undo-tree-id3720 . -2) (undo-tree-id3721 . -2) (undo-tree-id3722 . -2) (undo-tree-id3723 . -2) (undo-tree-id3724 . -2) (undo-tree-id3725 . -2) (undo-tree-id3726 . -2) (undo-tree-id3727 . -2) (undo-tree-id3728 . -2) (undo-tree-id3729 . -2) (undo-tree-id3730 . -2) (undo-tree-id3731 . -2) (undo-tree-id3732 . -2) (undo-tree-id3733 . -2) (undo-tree-id3734 . -2) (undo-tree-id3735 . -2) (undo-tree-id3736 . -2) (undo-tree-id3737 . -2) (undo-tree-id3738 . -2) (undo-tree-id3739 . -2) (undo-tree-id3740 . -2) (undo-tree-id3741 . -2) (undo-tree-id3742 . -2) (undo-tree-id3743 . -2) (undo-tree-id3744 . -2) (undo-tree-id3745 . -2) (undo-tree-id3746 . -2) (undo-tree-id3747 . -2) (undo-tree-id3748 . -2) (undo-tree-id3749 . -2) (undo-tree-id3750 . -2) (undo-tree-id3751 . -2) (undo-tree-id3752 . -2) (undo-tree-id3753 . -2) (undo-tree-id3754 . -2) (undo-tree-id3755 . -2) (undo-tree-id3756 . -2) (undo-tree-id3757 . -2) (undo-tree-id3758 . -2) (undo-tree-id3759 . -2) (undo-tree-id3760 . -2) (undo-tree-id3761 . -2) (undo-tree-id3762 . -2) (undo-tree-id3763 . -2) (undo-tree-id3764 . -2) (undo-tree-id3765 . -2) (undo-tree-id3766 . -2) (undo-tree-id3767 . -2) (undo-tree-id3768 . -2) (undo-tree-id3769 . -2) (undo-tree-id3770 . -2) (undo-tree-id3771 . -2) (undo-tree-id3772 . -2) (undo-tree-id3773 . -2) (undo-tree-id3774 . -2) (undo-tree-id3775 . -2) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) (undo-tree-id3781 . -2) (undo-tree-id3782 . -2) (undo-tree-id3783 . -2) (undo-tree-id3784 . -2) (undo-tree-id3785 . -2) (undo-tree-id3786 . -2) (undo-tree-id3787 . -2) (undo-tree-id3788 . -2) (undo-tree-id3789 . -2) (undo-tree-id3790 . -2) (undo-tree-id3791 . -2) (undo-tree-id3792 . -2) (undo-tree-id3793 . -2) (undo-tree-id3794 . -2) (undo-tree-id3795 . -2) (undo-tree-id3796 . -2) (undo-tree-id3797 . -2) (undo-tree-id3798 . -2) (undo-tree-id3799 . -2) (undo-tree-id3800 . -2) (undo-tree-id3801 . -2) (undo-tree-id3802 . -2) (undo-tree-id3803 . -2) (undo-tree-id3804 . -2) (undo-tree-id3805 . -2) (undo-tree-id3806 . -2) (undo-tree-id3807 . -2) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (undo-tree-id3810 . -2) (undo-tree-id3811 . -2) (undo-tree-id3812 . -2) (undo-tree-id3813 . -2) (undo-tree-id3814 . -2) (undo-tree-id3815 . -2) (undo-tree-id3816 . -2) (undo-tree-id3817 . -2) (undo-tree-id3818 . -2) (undo-tree-id3819 . -2) (undo-tree-id3820 . -2) (undo-tree-id3821 . -2) (undo-tree-id3822 . -2) (undo-tree-id3823 . -2) (undo-tree-id3824 . -2) (undo-tree-id3825 . -2) (undo-tree-id3826 . -2) (undo-tree-id3827 . -2) (undo-tree-id3828 . -2) (undo-tree-id3829 . -2) (undo-tree-id3830 . -2) (undo-tree-id3831 . -2) (undo-tree-id3832 . -2) (undo-tree-id3833 . -2) (undo-tree-id3834 . -2) (undo-tree-id3835 . -2) (undo-tree-id3836 . -2) (undo-tree-id3837 . -2) (undo-tree-id3838 . -2) (undo-tree-id3839 . -2) (undo-tree-id3840 . -2) (undo-tree-id3841 . -2) (undo-tree-id3842 . -2) (undo-tree-id3843 . -2) (undo-tree-id3844 . -2) (undo-tree-id3845 . -2) (undo-tree-id3846 . -2) (undo-tree-id3847 . -2) (undo-tree-id3848 . -2) (undo-tree-id3849 . -2) (undo-tree-id3850 . -2) (undo-tree-id3851 . -2) (undo-tree-id3852 . -2) (undo-tree-id3853 . -2) (undo-tree-id3854 . -2) (undo-tree-id3855 . -2) (undo-tree-id3856 . -2) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) (undo-tree-id3859 . -2) (undo-tree-id3860 . -2) (undo-tree-id3861 . -2) (undo-tree-id3862 . -2) (undo-tree-id3863 . -2) (undo-tree-id3864 . -2) (undo-tree-id3865 . -2) (undo-tree-id3866 . -2) (undo-tree-id3867 . -2) (undo-tree-id3868 . -2) (undo-tree-id3869 . -2) (undo-tree-id3870 . -2) (undo-tree-id3871 . -2) (undo-tree-id3872 . -2) (undo-tree-id3873 . -2) (undo-tree-id3874 . -2) (undo-tree-id3875 . -2) (undo-tree-id3876 . -2) (undo-tree-id3877 . -2) (undo-tree-id3878 . -2) (undo-tree-id3879 . -2) (undo-tree-id3880 . -2) (undo-tree-id3881 . -2) (undo-tree-id3882 . -2) (undo-tree-id3883 . -2) (undo-tree-id3884 . -2) (undo-tree-id3885 . -2) (undo-tree-id3886 . -2) (undo-tree-id3887 . -2) (undo-tree-id3888 . -2) (undo-tree-id3889 . -2) (undo-tree-id3890 . -2) (undo-tree-id3891 . -2) (undo-tree-id3892 . -2) (undo-tree-id3893 . -2) (undo-tree-id3894 . -2) (undo-tree-id3895 . -2) (undo-tree-id3896 . -2) (undo-tree-id3897 . -2) (undo-tree-id3898 . -2) (undo-tree-id3899 . -2) (undo-tree-id3900 . -2) (undo-tree-id3901 . -2) (undo-tree-id3902 . -2) (undo-tree-id3903 . -2) (undo-tree-id3904 . -2) (undo-tree-id3905 . -2) (undo-tree-id3906 . -2) (undo-tree-id3907 . -2) (undo-tree-id3908 . -2) (undo-tree-id3909 . -2) (undo-tree-id3910 . -2) (undo-tree-id3911 . -2) (undo-tree-id3912 . -2) (undo-tree-id3913 . -2) (undo-tree-id3914 . -2) (undo-tree-id3915 . -2) (undo-tree-id3916 . -2) (undo-tree-id3917 . -2) (undo-tree-id3918 . -2) (undo-tree-id3919 . -2) (undo-tree-id3920 . -2) (undo-tree-id3921 . -2) (undo-tree-id3922 . -2) (undo-tree-id3923 . -2) (undo-tree-id3924 . -2) (undo-tree-id3925 . -2) (undo-tree-id3926 . -2) (undo-tree-id3927 . -2) (undo-tree-id3928 . -2) (undo-tree-id3929 . -2) (undo-tree-id3930 . -2) (undo-tree-id3931 . -2) (undo-tree-id3932 . -2) (undo-tree-id3933 . -2) (undo-tree-id3934 . -2) (undo-tree-id3935 . -2) (undo-tree-id3936 . -2) (undo-tree-id3937 . -2) (undo-tree-id3938 . -2) (undo-tree-id3939 . -2) (undo-tree-id3940 . -2) (undo-tree-id3941 . -2) (undo-tree-id3942 . -2) (undo-tree-id3943 . -2) (undo-tree-id3944 . -2) (undo-tree-id3945 . -2) (undo-tree-id3946 . -2) (undo-tree-id3947 . -2) (undo-tree-id3948 . -2) (undo-tree-id3949 . -2) (undo-tree-id3950 . -2) (undo-tree-id3951 . -2) (undo-tree-id3952 . -2) (undo-tree-id3953 . -2) (undo-tree-id3954 . -2) (undo-tree-id3955 . -2) (undo-tree-id3956 . -2) (undo-tree-id3957 . -2) (undo-tree-id3958 . -2) (undo-tree-id3959 . -2) (undo-tree-id3960 . -2) (undo-tree-id3961 . -2) (undo-tree-id3962 . -2) (undo-tree-id3963 . -2) (undo-tree-id3964 . -2) (undo-tree-id3965 . -2) (undo-tree-id3966 . -2) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) (undo-tree-id3969 . -2) (undo-tree-id3970 . -2) (undo-tree-id3971 . -2) (undo-tree-id3972 . -2) (undo-tree-id3973 . -2) (undo-tree-id3974 . -2) (undo-tree-id3975 . -2) (undo-tree-id3976 . -2) (undo-tree-id3977 . -2) (undo-tree-id3978 . -2) (undo-tree-id3979 . -2) (undo-tree-id3980 . -2) (undo-tree-id3981 . -2) (undo-tree-id3982 . -2) (undo-tree-id3983 . -2) (undo-tree-id3984 . -2) (undo-tree-id3985 . -2) (undo-tree-id3986 . -2) (undo-tree-id3987 . -2) (undo-tree-id3988 . -2) (undo-tree-id3989 . -2) (undo-tree-id3990 . -2) (undo-tree-id3991 . -2) (undo-tree-id3992 . -2) (undo-tree-id3993 . -2) (undo-tree-id3994 . -2) (undo-tree-id3995 . -2) (undo-tree-id3996 . -2) (undo-tree-id3997 . -2) (undo-tree-id3998 . -2) (undo-tree-id3999 . -2) (undo-tree-id4000 . -2) (undo-tree-id4001 . -2) (undo-tree-id4002 . -2) (undo-tree-id4003 . -2) (undo-tree-id4004 . -2) (undo-tree-id4005 . -2) (undo-tree-id4006 . -2) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . -2) (undo-tree-id4014 . -2) (undo-tree-id4015 . -2) (undo-tree-id4016 . -2) (undo-tree-id4017 . -2) (undo-tree-id4018 . -2) (undo-tree-id4019 . -2) (undo-tree-id4020 . -2) (undo-tree-id4021 . -2) (undo-tree-id4022 . -2) (undo-tree-id4023 . -2) (undo-tree-id4024 . -2) (undo-tree-id4025 . -2) (undo-tree-id4026 . -2) (undo-tree-id4027 . -2) (undo-tree-id4028 . -2) (undo-tree-id4029 . -2) (undo-tree-id4030 . -2) (undo-tree-id4031 . -2) (undo-tree-id4032 . -2) (undo-tree-id4033 . -2) (undo-tree-id4034 . -2) (undo-tree-id4035 . -2) (undo-tree-id4036 . -2) (undo-tree-id4037 . -2) (undo-tree-id4038 . -2) (undo-tree-id4039 . -2) (undo-tree-id4040 . -2) (undo-tree-id4041 . -2) (undo-tree-id4042 . -2) (undo-tree-id4043 . -2) (undo-tree-id4044 . -2) (undo-tree-id4045 . -2) (undo-tree-id4046 . -2) (undo-tree-id4047 . -2) (undo-tree-id4048 . -2) (undo-tree-id4049 . -2) (undo-tree-id4050 . -2) (undo-tree-id4051 . -2) (undo-tree-id4052 . -2) (undo-tree-id4053 . -2) (undo-tree-id4054 . -2) (undo-tree-id4055 . -2) (undo-tree-id4056 . -2) (undo-tree-id4057 . -2) (undo-tree-id4058 . -2) (undo-tree-id4059 . -2) (undo-tree-id4060 . -2) (undo-tree-id4061 . -2) (undo-tree-id4062 . -2) (undo-tree-id4063 . -2) (undo-tree-id4064 . -2) (undo-tree-id4065 . -2) (undo-tree-id4066 . -2) (undo-tree-id4067 . -2) (undo-tree-id4068 . -2) (undo-tree-id4069 . -2) (undo-tree-id4070 . -2) (undo-tree-id4071 . -2) (undo-tree-id4072 . -2) (undo-tree-id4073 . -2) (undo-tree-id4074 . -2) (undo-tree-id4075 . -2) (undo-tree-id4076 . -2) (undo-tree-id4077 . -2) (undo-tree-id4078 . -2) (undo-tree-id4079 . -2) (undo-tree-id4080 . -2) (undo-tree-id4081 . -2) (undo-tree-id4082 . -2) (undo-tree-id4083 . -2) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (undo-tree-id4086 . -2) (undo-tree-id4087 . -2) (undo-tree-id4088 . -2) (undo-tree-id4089 . -2) (undo-tree-id4090 . -2) (undo-tree-id4091 . -2) (undo-tree-id4092 . -2) (undo-tree-id4093 . -2) (undo-tree-id4094 . -2) (undo-tree-id4095 . -2) (undo-tree-id4096 . -2) (undo-tree-id4097 . -2) (undo-tree-id4098 . -2) (undo-tree-id4099 . -2) (undo-tree-id4100 . -2) (undo-tree-id4101 . -2) (undo-tree-id4102 . -2) (undo-tree-id4103 . -2) (undo-tree-id4104 . -2) (undo-tree-id4105 . -2) (undo-tree-id4106 . -2) (undo-tree-id4107 . -2) (undo-tree-id4108 . -2) (undo-tree-id4109 . -2) (undo-tree-id4110 . -2) (undo-tree-id4111 . -2) (undo-tree-id4112 . -2) (undo-tree-id4113 . -2) (undo-tree-id4114 . -2) (undo-tree-id4115 . -2) (undo-tree-id4116 . -2) (undo-tree-id4117 . -2) (undo-tree-id4118 . -2) (undo-tree-id4119 . -2) (undo-tree-id4120 . -2) (undo-tree-id4121 . -2) (undo-tree-id4122 . -2) (undo-tree-id4123 . -2) (undo-tree-id4124 . -2) (undo-tree-id4125 . -2) (undo-tree-id4126 . -2) (undo-tree-id4127 . -2) (undo-tree-id4128 . -2) (undo-tree-id4129 . -2) (undo-tree-id4130 . -2) (undo-tree-id4131 . -2) (undo-tree-id4132 . -2) (undo-tree-id4133 . -2) (undo-tree-id4134 . -2) (undo-tree-id4135 . -2) (undo-tree-id4136 . -2) (undo-tree-id4137 . -2) (undo-tree-id4138 . -2) (undo-tree-id4139 . -2) (undo-tree-id4140 . -2) (undo-tree-id4141 . -2) (undo-tree-id4142 . -2) (undo-tree-id4143 . -2) (#(" " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . 545) (undo-tree-id4144 . -1)) (26353 48692 741733 640000) 0 nil])
([nil nil ((5231 . 5232) (5227 . 5231) (#("da" 0 2 (fontified nil)) . 5227) (5227 . 5229) (#("data" 0 4 (fontified nil)) . -5227) (undo-tree-id4617 . -4) (5227 . 5231) (#("da" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5227) (undo-tree-id4618 . -2) (undo-tree-id4619 . -2) 5229 (5227 . 5229) (5223 . 5227)) nil (26353 49411 535261 153000) 0 nil])
([nil nil ((551 . 566) (#("V" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -551) (undo-tree-id17 . -1) 552 (547 . 552) (#("d" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -547) (undo-tree-id19 . -1) (#("o" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -548) (#("m" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -549) (#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -550) 551 (546 . 551) (545 . 546) (#(" " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . -545) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -546) 547 (546 . 547)) ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified nil)) . 546) (545 . 547) (#(" " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified nil)) . 545) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (#("Odom " 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil)) . 546) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (547 . 551) (#("dom V" 0 4 (face font-lock-comment-face c-in-sws t fontified nil) 4 5 (face font-lock-comment-face fontified nil)) . 547) (undo-tree-id2628 . -4) (undo-tree-id2629 . -4) (undo-tree-id2630 . -4) (undo-tree-id2631 . -4) (undo-tree-id2632 . -4) (undo-tree-id2633 . -4) (undo-tree-id2634 . -4) (undo-tree-id2635 . -4) (undo-tree-id2636 . -4) (undo-tree-id2637 . -4) (undo-tree-id2638 . -4) (undo-tree-id2639 . -4) (undo-tree-id2640 . -4) (undo-tree-id2641 . -4) (undo-tree-id2642 . -4) (undo-tree-id2643 . -4) (undo-tree-id2644 . -4) (undo-tree-id2645 . -4) (undo-tree-id2646 . -4) (undo-tree-id2647 . -4) (undo-tree-id2648 . -4) (undo-tree-id2649 . -4) (undo-tree-id2650 . -4) (undo-tree-id2651 . -4) (undo-tree-id2652 . -4) (undo-tree-id2653 . -4) (undo-tree-id2654 . -4) (undo-tree-id2655 . -4) (undo-tree-id2656 . -4) (undo-tree-id2657 . -4) (undo-tree-id2658 . -4) (undo-tree-id2659 . -4) (undo-tree-id2660 . -4) (undo-tree-id2661 . -4) (undo-tree-id2662 . -4) (undo-tree-id2663 . -4) (undo-tree-id2664 . -4) (undo-tree-id2665 . -4) (undo-tree-id2666 . -4) (undo-tree-id2667 . -4) (undo-tree-id2668 . -4) (undo-tree-id2669 . -4) (undo-tree-id2670 . -4) (undo-tree-id2671 . -4) (undo-tree-id2672 . -4) (undo-tree-id2673 . -4) (undo-tree-id2674 . -4) (undo-tree-id2675 . -4) (undo-tree-id2676 . -4) (undo-tree-id2677 . -4) (undo-tree-id2678 . -4) (undo-tree-id2679 . -4) (undo-tree-id2680 . -4) (undo-tree-id2681 . -4) (undo-tree-id2682 . -4) (undo-tree-id2683 . -4) (undo-tree-id2684 . -4) (undo-tree-id2685 . -4) (undo-tree-id2686 . -4) (undo-tree-id2687 . -4) (undo-tree-id2688 . -4) (undo-tree-id2689 . -4) (undo-tree-id2690 . -4) (undo-tree-id2691 . -4) (undo-tree-id2692 . -4) (undo-tree-id2693 . -4) (undo-tree-id2694 . -4) (undo-tree-id2695 . -4) (undo-tree-id2696 . -4) (undo-tree-id2697 . -4) (undo-tree-id2698 . -4) (undo-tree-id2699 . -4) (undo-tree-id2700 . -4) (undo-tree-id2701 . -4) (undo-tree-id2702 . -4) (undo-tree-id2703 . -4) (undo-tree-id2704 . -4) (undo-tree-id2705 . -4) (undo-tree-id2706 . -4) (undo-tree-id2707 . -4) (undo-tree-id2708 . -4) (undo-tree-id2709 . -4) (undo-tree-id2710 . -4) (undo-tree-id2711 . -4) (undo-tree-id2712 . -4) (undo-tree-id2713 . -4) (undo-tree-id2714 . -4) (undo-tree-id2715 . -4) (undo-tree-id2716 . -4) (undo-tree-id2717 . -4) (undo-tree-id2718 . -4) (undo-tree-id2719 . -4) (undo-tree-id2720 . -4) (undo-tree-id2721 . -4) (undo-tree-id2722 . -4) (undo-tree-id2723 . -4) (undo-tree-id2724 . -4) (undo-tree-id2725 . -4) (undo-tree-id2726 . -4) (undo-tree-id2727 . -4) (undo-tree-id2728 . -4) (undo-tree-id2729 . -4) (undo-tree-id2730 . -4) (undo-tree-id2731 . -4) (undo-tree-id2732 . -4) (undo-tree-id2733 . -4) (undo-tree-id2734 . -4) (undo-tree-id2735 . -4) (undo-tree-id2736 . -4) (undo-tree-id2737 . -4) (undo-tree-id2738 . -4) (undo-tree-id2739 . -4) (undo-tree-id2740 . -4) (undo-tree-id2741 . -4) (undo-tree-id2742 . -4) (undo-tree-id2743 . -4) (undo-tree-id2744 . -4) (undo-tree-id2745 . -4) (undo-tree-id2746 . -4) (undo-tree-id2747 . -4) (undo-tree-id2748 . -4) (undo-tree-id2749 . -4) (undo-tree-id2750 . -4) (undo-tree-id2751 . -4) (undo-tree-id2752 . -4) (undo-tree-id2753 . -4) (undo-tree-id2754 . -4) (undo-tree-id2755 . -4) (undo-tree-id2756 . -4) (undo-tree-id2757 . -4) (undo-tree-id2758 . -4) (undo-tree-id2759 . -4) (undo-tree-id2760 . -4) (undo-tree-id2761 . -4) (undo-tree-id2762 . -4) (undo-tree-id2763 . -4) (undo-tree-id2764 . -4) (undo-tree-id2765 . -4) (undo-tree-id2766 . -4) (undo-tree-id2767 . -4) (undo-tree-id2768 . -4) (undo-tree-id2769 . -4) (undo-tree-id2770 . -4) (undo-tree-id2771 . -4) (undo-tree-id2772 . -4) (undo-tree-id2773 . -4) (undo-tree-id2774 . -4) (undo-tree-id2775 . -4) (undo-tree-id2776 . -4) (undo-tree-id2777 . -4) (undo-tree-id2778 . -4) (undo-tree-id2779 . -4) (undo-tree-id2780 . -4) (undo-tree-id2781 . -4) (undo-tree-id2782 . -4) (undo-tree-id2783 . -4) (undo-tree-id2784 . -4) (undo-tree-id2785 . -4) (undo-tree-id2786 . -4) (undo-tree-id2787 . -4) (undo-tree-id2788 . -4) (undo-tree-id2789 . -4) (undo-tree-id2790 . -4) (undo-tree-id2791 . -4) (undo-tree-id2792 . -4) (undo-tree-id2793 . -4) (undo-tree-id2794 . -4) (undo-tree-id2795 . -4) (undo-tree-id2796 . -4) (undo-tree-id2797 . -4) (undo-tree-id2798 . -4) (undo-tree-id2799 . -4) (undo-tree-id2800 . -4) (undo-tree-id2801 . -4) (undo-tree-id2802 . -4) (undo-tree-id2803 . -4) (undo-tree-id2804 . -4) (undo-tree-id2805 . -4) (undo-tree-id2806 . -4) (undo-tree-id2807 . -4) (undo-tree-id2808 . -4) (undo-tree-id2809 . -4) (undo-tree-id2810 . -4) (undo-tree-id2811 . -4) (undo-tree-id2812 . -4) (undo-tree-id2813 . -4) (undo-tree-id2814 . -4) (undo-tree-id2815 . -4) (undo-tree-id2816 . -4) (undo-tree-id2817 . -4) (undo-tree-id2818 . -4) (undo-tree-id2819 . -4) (undo-tree-id2820 . -4) (undo-tree-id2821 . -4) (undo-tree-id2822 . -4) (undo-tree-id2823 . -4) (undo-tree-id2824 . -4) (undo-tree-id2825 . -4) (undo-tree-id2826 . -4) (undo-tree-id2827 . -4) (undo-tree-id2828 . -4) (undo-tree-id2829 . -4) (undo-tree-id2830 . -4) (undo-tree-id2831 . -4) (undo-tree-id2832 . -4) (undo-tree-id2833 . -4) (undo-tree-id2834 . -4) (undo-tree-id2835 . -4) (undo-tree-id2836 . -4) (undo-tree-id2837 . -4) (undo-tree-id2838 . -4) (undo-tree-id2839 . -4) (undo-tree-id2840 . -4) (undo-tree-id2841 . -4) (undo-tree-id2842 . -4) (undo-tree-id2843 . -4) (undo-tree-id2844 . -4) (undo-tree-id2845 . -4) (undo-tree-id2846 . -4) (undo-tree-id2847 . -4) (undo-tree-id2848 . -4) (undo-tree-id2849 . -4) (undo-tree-id2850 . -4) (undo-tree-id2851 . -4) (undo-tree-id2852 . -4) (undo-tree-id2853 . -4) (undo-tree-id2854 . -4) (undo-tree-id2855 . -4) (undo-tree-id2856 . -4) (undo-tree-id2857 . -4) (undo-tree-id2858 . -4) (undo-tree-id2859 . -4) (undo-tree-id2860 . -4) (undo-tree-id2861 . -4) (undo-tree-id2862 . -4) (undo-tree-id2863 . -4) (undo-tree-id2864 . -4) (undo-tree-id2865 . -4) (undo-tree-id2866 . -4) (undo-tree-id2867 . -4) (undo-tree-id2868 . -4) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -4) (undo-tree-id2940 . -4) (undo-tree-id2941 . -4) (undo-tree-id2942 . -4) (undo-tree-id2943 . -4) (undo-tree-id2944 . -4) (undo-tree-id2945 . -4) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -4) (undo-tree-id2952 . -4) (undo-tree-id2953 . -4) (undo-tree-id2954 . -4) (undo-tree-id2955 . -4) (undo-tree-id2956 . -4) (551 . 552) (#("From Controller" 0 15 (face font-lock-comment-face c-in-sws t fontified t)) . 551) (undo-tree-id2957 . -15) (undo-tree-id2958 . -15) (undo-tree-id2959 . -15) (undo-tree-id2960 . -15) (undo-tree-id2961 . -15) (undo-tree-id2962 . -15) (undo-tree-id2963 . -15) (undo-tree-id2964 . -15) (undo-tree-id2965 . -15) (undo-tree-id2966 . -15) (undo-tree-id2967 . -15) (undo-tree-id2968 . -15) (undo-tree-id2969 . -15) (undo-tree-id2970 . -15) (undo-tree-id2971 . -15) (undo-tree-id2972 . -15) (undo-tree-id2973 . -15) (undo-tree-id2974 . -15) (undo-tree-id2975 . -15) (undo-tree-id2976 . -15) (undo-tree-id2977 . -15) (undo-tree-id2978 . -15) (undo-tree-id2979 . -15) (undo-tree-id2980 . -15) (undo-tree-id2981 . -15) (undo-tree-id2982 . -15) (undo-tree-id2983 . -15) (undo-tree-id2984 . -15) (undo-tree-id2985 . -15) (undo-tree-id2986 . -15) (undo-tree-id2987 . -15) (undo-tree-id2988 . -15) (undo-tree-id2989 . -15) (undo-tree-id2990 . -15) (undo-tree-id2991 . -15) (undo-tree-id2992 . -15) (undo-tree-id2993 . -15) (undo-tree-id2994 . -15) (undo-tree-id2995 . -15) (undo-tree-id2996 . -15) (undo-tree-id2997 . -15) (undo-tree-id2998 . -15) (undo-tree-id2999 . -15) (undo-tree-id3000 . -15) (undo-tree-id3001 . -15) (undo-tree-id3002 . -15) (undo-tree-id3003 . -15) (undo-tree-id3004 . -15) (undo-tree-id3005 . -15) (undo-tree-id3006 . -15) (undo-tree-id3007 . -15) (undo-tree-id3008 . -15) (undo-tree-id3009 . -15) (undo-tree-id3010 . -15) (undo-tree-id3011 . -15) (undo-tree-id3012 . -15) (undo-tree-id3013 . -15) (undo-tree-id3014 . -15) (undo-tree-id3015 . -15) (undo-tree-id3016 . -15) (undo-tree-id3017 . -15) (undo-tree-id3018 . -15) (undo-tree-id3019 . -15) (undo-tree-id3020 . -15) (undo-tree-id3021 . -15) (undo-tree-id3022 . -15) (undo-tree-id3023 . -15) (undo-tree-id3024 . -15) (undo-tree-id3025 . -15) (undo-tree-id3026 . -15) (undo-tree-id3027 . -15) (undo-tree-id3028 . -15) (undo-tree-id3029 . -15) (undo-tree-id3030 . -15) (undo-tree-id3031 . -15) (undo-tree-id3032 . -15) (undo-tree-id3033 . -15) (undo-tree-id3034 . -15) (undo-tree-id3035 . -15) (undo-tree-id3036 . -15) (undo-tree-id3037 . -15) (undo-tree-id3038 . -15) (undo-tree-id3039 . -15) (undo-tree-id3040 . -15) (undo-tree-id3041 . -15) (undo-tree-id3042 . -15) (undo-tree-id3043 . -15) (undo-tree-id3044 . -15) (undo-tree-id3045 . -15) (undo-tree-id3046 . -15) (undo-tree-id3047 . -15) (undo-tree-id3048 . -15) (undo-tree-id3049 . -15) (undo-tree-id3050 . -15) (undo-tree-id3051 . -15) (undo-tree-id3052 . -15) (undo-tree-id3053 . -15) (undo-tree-id3054 . -15) (undo-tree-id3055 . -15) (undo-tree-id3056 . -15) (undo-tree-id3057 . -15) (undo-tree-id3058 . -15) (undo-tree-id3059 . -15) (undo-tree-id3060 . -15) (undo-tree-id3061 . -15) (undo-tree-id3062 . -15) (undo-tree-id3063 . -15) (undo-tree-id3064 . -15) (undo-tree-id3065 . -15) (undo-tree-id3066 . -15) (undo-tree-id3067 . -15) (undo-tree-id3068 . -15) (undo-tree-id3069 . -15) (undo-tree-id3070 . -15) (undo-tree-id3071 . -15) (undo-tree-id3072 . -15) (undo-tree-id3073 . -15) (undo-tree-id3074 . -15) (undo-tree-id3075 . -15) (undo-tree-id3076 . -15) (undo-tree-id3077 . -15) (undo-tree-id3078 . -15) (undo-tree-id3079 . -15) (undo-tree-id3080 . -15) (undo-tree-id3081 . -15) (undo-tree-id3082 . -15) (undo-tree-id3083 . -15) (undo-tree-id3084 . -15) (undo-tree-id3085 . -15) (undo-tree-id3086 . -15) (undo-tree-id3087 . -15) (undo-tree-id3088 . -15) (undo-tree-id3089 . -15) (undo-tree-id3090 . -15) (undo-tree-id3091 . -15) (undo-tree-id3092 . -15) (undo-tree-id3093 . -15) (undo-tree-id3094 . -15) (undo-tree-id3095 . -15) (undo-tree-id3096 . -15) (undo-tree-id3097 . -15) (undo-tree-id3098 . -15) (undo-tree-id3099 . -15) (undo-tree-id3100 . -15) (undo-tree-id3101 . -15) (undo-tree-id3102 . -15) (undo-tree-id3103 . -15) (undo-tree-id3104 . -15) (undo-tree-id3105 . -15) (undo-tree-id3106 . -15) (undo-tree-id3107 . -15) (undo-tree-id3108 . -15) (undo-tree-id3109 . -15) (undo-tree-id3110 . -15) (undo-tree-id3111 . -15) (undo-tree-id3112 . -15) (undo-tree-id3113 . -15) (undo-tree-id3114 . -15) (undo-tree-id3115 . -15) (undo-tree-id3116 . -15) (undo-tree-id3117 . -15) (undo-tree-id3118 . -15) (undo-tree-id3119 . -15) (undo-tree-id3120 . -15) (undo-tree-id3121 . -15) (undo-tree-id3122 . -15) (undo-tree-id3123 . -15) (undo-tree-id3124 . -15) (undo-tree-id3125 . -15) (undo-tree-id3126 . -15) (undo-tree-id3127 . -15) (undo-tree-id3128 . -15) (undo-tree-id3129 . -15) (undo-tree-id3130 . -15) (undo-tree-id3131 . -15) (undo-tree-id3132 . -15) (undo-tree-id3133 . -15) (undo-tree-id3134 . -15) (undo-tree-id3135 . -15) (undo-tree-id3136 . -15) (undo-tree-id3137 . -15) (undo-tree-id3138 . -15) (undo-tree-id3139 . -15) (undo-tree-id3140 . -15) (undo-tree-id3141 . -15) (undo-tree-id3142 . -15) (undo-tree-id3143 . -15) (undo-tree-id3144 . -15) (undo-tree-id3145 . -15) (undo-tree-id3146 . -15) (undo-tree-id3147 . -15) (undo-tree-id3148 . -15) (undo-tree-id3149 . -15) (undo-tree-id3150 . -15) (undo-tree-id3151 . -15) (undo-tree-id3152 . -15) (undo-tree-id3153 . -15) (undo-tree-id3154 . -15) (undo-tree-id3155 . -15) (undo-tree-id3156 . -15) (undo-tree-id3157 . -15) (undo-tree-id3158 . -15) (undo-tree-id3159 . -15) (undo-tree-id3160 . -15) (undo-tree-id3161 . -15) (undo-tree-id3162 . -15) (undo-tree-id3163 . -15) (undo-tree-id3164 . -15) (undo-tree-id3165 . -15) (undo-tree-id3166 . -15) (undo-tree-id3167 . -15) (undo-tree-id3168 . -15) (undo-tree-id3169 . -15) (undo-tree-id3170 . -15) (undo-tree-id3171 . -15) (undo-tree-id3172 . -15) (undo-tree-id3173 . -15) (undo-tree-id3174 . -15) (undo-tree-id3175 . -15) (undo-tree-id3176 . -15) (undo-tree-id3177 . -15) (undo-tree-id3178 . -15) (undo-tree-id3179 . -15) (undo-tree-id3180 . -15) (undo-tree-id3181 . -15) (undo-tree-id3182 . -15) (undo-tree-id3183 . -15) (undo-tree-id3184 . -15) (undo-tree-id3185 . -15) (undo-tree-id3186 . -15) (undo-tree-id3187 . -15) (undo-tree-id3188 . -15) (undo-tree-id3189 . -15) (undo-tree-id3190 . -15) (undo-tree-id3191 . -15) (undo-tree-id3192 . -15) (undo-tree-id3193 . -15) (undo-tree-id3194 . -15) (undo-tree-id3195 . -15) (undo-tree-id3196 . -15) (undo-tree-id3197 . -15) (undo-tree-id3198 . -15) (undo-tree-id3199 . -15) (undo-tree-id3200 . -15) (undo-tree-id3201 . -15) (undo-tree-id3202 . -15) (undo-tree-id3203 . -15) (undo-tree-id3204 . -15) (undo-tree-id3205 . -15) (undo-tree-id3206 . -15) (undo-tree-id3207 . -15) (undo-tree-id3208 . -15) (undo-tree-id3209 . -15) (undo-tree-id3210 . -15) (undo-tree-id3211 . -15) (undo-tree-id3212 . -15) (undo-tree-id3213 . -15) (undo-tree-id3214 . -15) (undo-tree-id3215 . -15) (undo-tree-id3216 . -15) (undo-tree-id3217 . -15) (undo-tree-id3218 . -15) (undo-tree-id3219 . -15) (undo-tree-id3220 . -15) (undo-tree-id3221 . -15) (undo-tree-id3222 . -15) (undo-tree-id3223 . -15) (undo-tree-id3224 . -15) (undo-tree-id3225 . -15) (undo-tree-id3226 . -15) (undo-tree-id3227 . -15) (undo-tree-id3228 . -15) (undo-tree-id3229 . -15) (undo-tree-id3230 . -15) (undo-tree-id3231 . -15) (undo-tree-id3232 . -15) (undo-tree-id3233 . -15) (undo-tree-id3234 . -15) (undo-tree-id3235 . -15) (undo-tree-id3236 . -15) (undo-tree-id3237 . -15) (undo-tree-id3238 . -15) (undo-tree-id3239 . -15) (undo-tree-id3240 . -15) (undo-tree-id3241 . -15) (undo-tree-id3242 . -14) (undo-tree-id3243 . -14) (undo-tree-id3244 . -14) (undo-tree-id3245 . -14) (undo-tree-id3246 . -14) (undo-tree-id3247 . -14) (undo-tree-id3248 . -14) (undo-tree-id3249 . -14) (undo-tree-id3250 . -14) (undo-tree-id3251 . -14) (undo-tree-id3252 . -14) (undo-tree-id3253 . -14) (undo-tree-id3254 . -14) (undo-tree-id3255 . -14) (undo-tree-id3256 . -14) (undo-tree-id3257 . -14) (undo-tree-id3258 . -14) (undo-tree-id3259 . -14) (undo-tree-id3260 . -14) (undo-tree-id3261 . -14) (undo-tree-id3262 . -14) (undo-tree-id3263 . -14) (undo-tree-id3264 . -14) (undo-tree-id3265 . -14) (undo-tree-id3266 . -14) (undo-tree-id3267 . -14) (undo-tree-id3268 . -14) (undo-tree-id3269 . -14) (undo-tree-id3270 . -14) (undo-tree-id3271 . -14) (undo-tree-id3272 . -14) (undo-tree-id3273 . -14) (undo-tree-id3274 . -14) (undo-tree-id3275 . -14) (undo-tree-id3276 . -14) (undo-tree-id3277 . -14) (undo-tree-id3278 . -14) (undo-tree-id3279 . -14) (undo-tree-id3280 . -14) (undo-tree-id3281 . -14) (undo-tree-id3282 . -14) (undo-tree-id3283 . -14) (undo-tree-id3284 . -14) (undo-tree-id3285 . -14)) (26353 48692 625974 350000) 0 nil])
([nil nil ((#("const " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 5191) (undo-tree-id4616 . -5)) nil (26353 49411 535258 903000) 0 nil])
([nil nil ((597 . 598) (595 . 597) (#("=" 0 1 (fontified t)) . -595) (#(" " 0 1 (fontified t)) . -596) 597 (596 . 597) (594 . 596) (22 . 39) (570 . 570) (570 . 577) (#("floa" 0 1 (fontified nil c-is-sws t) 1 4 (fontified nil)) . 570) (570 . 574) (#("float_t" 0 1 (fontified nil c-is-sws t) 1 7 (fontified nil)) . -570) (570 . 577) (#("floa" 0 1 (c-is-sws t fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -570) (undo-tree-id6 . -4) 574 (572 . 574) (570 . 572) (#("f" 0 1 (c-is-sws t fontified t)) . -570) (undo-tree-id8 . -1) (#("l" 0 1 (fontified t)) . -571) (undo-tree-id10 . -1) 572 (#("o" 0 1 (fontified t)) . -572) (undo-tree-id12 . -1) 573 (#("a" 0 1 (fontified t)) . -573) (undo-tree-id14 . -1) 574 (570 . 574) (568 . 570) (#("  " 0 2 (c-in-sws t c-is-sws t fontified nil)) . 567) (566 . 570)) ((#("
  
" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 3 (c-in-sws t c-is-sws t fontified nil) 3 4 (c-is-sws t fontified nil)) . 566) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (567 . 569) (#("  " 0 1 (c-is-sws t fontified nil) 1 2 (c-is-sws t fontified nil)) . 568) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) (undo-tree-id846 . -2) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -2) (undo-tree-id870 . -2) (undo-tree-id871 . -2) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -2) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) (#("floa" 0 1 (c-is-sws t fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 570) (570 . 574) (#("fl" 0 1 (c-is-sws t fontified nil) 1 2 (fontified nil)) . 570) (#("oa" 0 1 (fontified nil) 1 2 (fontified nil)) . 572) (570 . 574) (#("float_t" 0 1 (c-is-sws t fontified nil) 1 7 (fontified nil)) . 570) (570 . 577) (#("floa" 0 1 (c-is-sws t fontified nil) 1 4 (fontified nil)) . 570) (570 . 574) (#("float_t" 0 1 (face font-lock-type-face c-is-sws t fontified nil) 1 6 (face font-lock-type-face fontified nil) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified nil)) . 570) (undo-tree-id893 . -7) (undo-tree-id894 . -7) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -7) (undo-tree-id909 . -7) (undo-tree-id910 . -7) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (undo-tree-id918 . -7) (undo-tree-id919 . -7) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) (undo-tree-id925 . -7) (undo-tree-id926 . -7) (undo-tree-id927 . -7) (undo-tree-id928 . -7) (undo-tree-id929 . -7) (undo-tree-id930 . -7) (undo-tree-id931 . -7) (undo-tree-id932 . -7) (undo-tree-id933 . -7) (undo-tree-id934 . -7) (undo-tree-id935 . -7) (undo-tree-id936 . -7) (undo-tree-id937 . -7) (undo-tree-id938 . -7) (undo-tree-id939 . -7) (undo-tree-id940 . -7) (undo-tree-id941 . -7) (undo-tree-id942 . -7) (undo-tree-id943 . -7) (undo-tree-id944 . -7) (undo-tree-id945 . -7) (undo-tree-id946 . -7) (undo-tree-id947 . -7) (undo-tree-id948 . -7) (undo-tree-id949 . -7) (undo-tree-id950 . -7) (undo-tree-id951 . -7) (undo-tree-id952 . -7) (undo-tree-id953 . -7) (undo-tree-id954 . -7) (undo-tree-id955 . -7) (undo-tree-id956 . -7) (undo-tree-id957 . -7) (undo-tree-id958 . -7) (undo-tree-id959 . -7) (undo-tree-id960 . -7) (undo-tree-id961 . -7) (undo-tree-id962 . -7) (undo-tree-id963 . -7) (undo-tree-id964 . -7) (undo-tree-id965 . -7) (undo-tree-id966 . -7) (undo-tree-id967 . -7) (undo-tree-id968 . -7) (undo-tree-id969 . -7) (undo-tree-id970 . -7) (undo-tree-id971 . -7) (undo-tree-id972 . -7) (undo-tree-id973 . -7) (undo-tree-id974 . -7) (undo-tree-id975 . -7) (undo-tree-id976 . -7) (undo-tree-id977 . -7) (undo-tree-id978 . -7) (undo-tree-id979 . -7) (undo-tree-id980 . -7) (undo-tree-id981 . -7) (undo-tree-id982 . -7) (undo-tree-id983 . -7) (undo-tree-id984 . -7) (undo-tree-id985 . -7) (undo-tree-id986 . -7) (undo-tree-id987 . -7) (undo-tree-id988 . -7) (undo-tree-id989 . -7) (undo-tree-id990 . -7) (undo-tree-id991 . -7) (undo-tree-id992 . -7) (undo-tree-id993 . -7) (undo-tree-id994 . -7) (undo-tree-id995 . -7) (undo-tree-id996 . -7) (undo-tree-id997 . -7) (undo-tree-id998 . -7) (undo-tree-id999 . -7) (undo-tree-id1000 . -7) (undo-tree-id1001 . -7) (undo-tree-id1002 . -7) (undo-tree-id1003 . -7) (undo-tree-id1004 . -7) (undo-tree-id1005 . -7) (undo-tree-id1006 . -7) (undo-tree-id1007 . -7) (undo-tree-id1008 . -7) (undo-tree-id1009 . -7) (undo-tree-id1010 . -7) (undo-tree-id1011 . -7) (undo-tree-id1012 . -7) (undo-tree-id1013 . -7) (undo-tree-id1014 . -7) (undo-tree-id1015 . -7) (undo-tree-id1016 . -7) (undo-tree-id1017 . -7) (undo-tree-id1018 . -7) (undo-tree-id1019 . -7) (undo-tree-id1020 . -7) (undo-tree-id1021 . -7) (undo-tree-id1022 . -7) (undo-tree-id1023 . -7) (undo-tree-id1024 . -7) (undo-tree-id1025 . -7) (undo-tree-id1026 . -7) (undo-tree-id1027 . -7) (undo-tree-id1028 . -7) (undo-tree-id1029 . -7) (undo-tree-id1030 . -7) (undo-tree-id1031 . -7) (undo-tree-id1032 . -7) (undo-tree-id1033 . -7) (undo-tree-id1034 . -7) (undo-tree-id1035 . -7) (undo-tree-id1036 . -7) (undo-tree-id1037 . -7) (undo-tree-id1038 . -7) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -7) (undo-tree-id1042 . -7) (undo-tree-id1043 . -7) (undo-tree-id1044 . -7) (undo-tree-id1045 . -7) (undo-tree-id1046 . -7) (undo-tree-id1047 . -7) (undo-tree-id1048 . -7) (undo-tree-id1049 . -7) (undo-tree-id1050 . -7) (undo-tree-id1051 . -7) (undo-tree-id1052 . -7) (undo-tree-id1053 . -7) (undo-tree-id1054 . -7) (undo-tree-id1055 . -7) (undo-tree-id1056 . -7) (undo-tree-id1057 . -7) (undo-tree-id1058 . -7) (undo-tree-id1059 . -7) (undo-tree-id1060 . -7) (undo-tree-id1061 . -7) (undo-tree-id1062 . -7) (undo-tree-id1063 . -7) (undo-tree-id1064 . -7) (undo-tree-id1065 . -7) (undo-tree-id1066 . -7) (undo-tree-id1067 . -7) (undo-tree-id1068 . -7) (undo-tree-id1069 . -7) (undo-tree-id1070 . -7) (undo-tree-id1071 . -7) (undo-tree-id1072 . -7) (undo-tree-id1073 . -7) (undo-tree-id1074 . -7) (undo-tree-id1075 . -7) (undo-tree-id1076 . -7) (undo-tree-id1077 . -7) (undo-tree-id1078 . -7) (undo-tree-id1079 . -7) (undo-tree-id1080 . -7) (undo-tree-id1081 . -7) (undo-tree-id1082 . -7) (undo-tree-id1083 . -7) (undo-tree-id1084 . -7) (undo-tree-id1085 . -7) (undo-tree-id1086 . -7) (undo-tree-id1087 . -7) (undo-tree-id1088 . -7) (undo-tree-id1089 . -7) (undo-tree-id1090 . -7) (undo-tree-id1091 . -7) (undo-tree-id1092 . -7) (undo-tree-id1093 . -7) (undo-tree-id1094 . -7) (undo-tree-id1095 . -7) (undo-tree-id1096 . -7) (undo-tree-id1097 . -7) (undo-tree-id1098 . -7) (undo-tree-id1099 . -7) (undo-tree-id1100 . -7) (undo-tree-id1101 . -7) (undo-tree-id1102 . -7) (undo-tree-id1103 . -7) (undo-tree-id1104 . -7) (undo-tree-id1105 . -7) (undo-tree-id1106 . -7) (undo-tree-id1107 . -7) (undo-tree-id1108 . -7) (undo-tree-id1109 . -7) (undo-tree-id1110 . -7) (undo-tree-id1111 . -7) (undo-tree-id1112 . -7) (undo-tree-id1113 . -7) (undo-tree-id1114 . -7) (undo-tree-id1115 . -7) (undo-tree-id1116 . -7) (undo-tree-id1117 . -7) (undo-tree-id1118 . -7) (undo-tree-id1119 . -7) (undo-tree-id1120 . -7) (undo-tree-id1121 . -7) (undo-tree-id1122 . -7) (undo-tree-id1123 . -7) (undo-tree-id1124 . -7) (undo-tree-id1125 . -7) (undo-tree-id1126 . -7) (undo-tree-id1127 . -7) (undo-tree-id1128 . -7) (undo-tree-id1129 . -7) (undo-tree-id1130 . -7) (undo-tree-id1131 . -7) (undo-tree-id1132 . -7) (undo-tree-id1133 . -7) (undo-tree-id1134 . -7) (undo-tree-id1135 . -7) (undo-tree-id1136 . -7) (undo-tree-id1137 . -7) (undo-tree-id1138 . -7) (undo-tree-id1139 . -7) (undo-tree-id1140 . -7) (undo-tree-id1141 . -7) (undo-tree-id1142 . -7) (undo-tree-id1143 . -7) (undo-tree-id1144 . -7) (undo-tree-id1145 . -7) (undo-tree-id1146 . -7) (undo-tree-id1147 . -7) (undo-tree-id1148 . -7) (undo-tree-id1149 . -7) (undo-tree-id1150 . -7) (undo-tree-id1151 . -7) (undo-tree-id1152 . -7) (undo-tree-id1153 . -7) (undo-tree-id1154 . -7) (undo-tree-id1155 . -7) (undo-tree-id1156 . -7) (undo-tree-id1157 . -7) (undo-tree-id1158 . -7) (undo-tree-id1159 . -7) (undo-tree-id1160 . -7) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7) (undo-tree-id1163 . -7) (undo-tree-id1164 . -7) (undo-tree-id1165 . -7) (undo-tree-id1166 . -7) (undo-tree-id1167 . -7) (undo-tree-id1168 . -7) (undo-tree-id1169 . -7) (undo-tree-id1170 . -7) (undo-tree-id1171 . -7) (undo-tree-id1172 . -7) (undo-tree-id1173 . -7) (undo-tree-id1174 . -7) (undo-tree-id1175 . -7) (undo-tree-id1176 . -7) (undo-tree-id1177 . -7) (undo-tree-id1178 . -7) (undo-tree-id1179 . -7) (#("#include <cmath>
" 0 1 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 10 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 10 15 (c-in-sws t face font-lock-string-face fontified t) 15 16 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 16 17 (c-in-sws t fontified t)) . 22) (undo-tree-id1180 . -16) (#(" =" 0 1 (fontified nil) 1 2 (fontified nil)) . 594) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#(" " 0 1 (fontified nil)) . 596) (595 . 597) (#("vx" 0 1 (face font-lock-variable-name-face fontified nil) 1 2 (face font-lock-variable-name-face fontified nil)) . 595) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -2) (undo-tree-id1540 . -2) (undo-tree-id1541 . -2) (undo-tree-id1542 . -2) (undo-tree-id1543 . -2) (undo-tree-id1544 . -2) (undo-tree-id1545 . -2) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . -2) (undo-tree-id1551 . -2) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -2) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . -2) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) (undo-tree-id1622 . -2) (undo-tree-id1623 . -2) (undo-tree-id1624 . -2) (undo-tree-id1625 . -2) (undo-tree-id1626 . -2) (undo-tree-id1627 . -2) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (undo-tree-id1631 . -2) (undo-tree-id1632 . -2) (undo-tree-id1633 . -2) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) (undo-tree-id1667 . -2) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2) (undo-tree-id1673 . -2) (undo-tree-id1674 . -2) (undo-tree-id1675 . -2) (undo-tree-id1676 . -2) (undo-tree-id1677 . -2) (undo-tree-id1678 . -2) (undo-tree-id1679 . -2) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (#(";" 0 1 (fontified t)) . 597) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1)) (26353 48692 233163 890000) 0 nil])
([nil nil ((5249 . 5250) (5239 . 5249) (#("ST" 0 2 (fontified nil)) . 5239) (5239 . 5241) (#("START_BYTE" 0 10 (fontified nil)) . -5239) (undo-tree-id4610 . -10) (5239 . 5249) (#("ST" 0 1 (fontified t) 1 2 (fontified t)) . -5239) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) 5241 (5240 . 5241) (5236 . 5240) (5226 . 5236) (#("s" 0 1 (fontified nil)) . 5226) (5226 . 5227) (#("start_byte" 0 10 (fontified nil)) . -5226) (undo-tree-id4613 . -10) (5226 . 5236) (#("st" 0 1 (fontified t) 1 2 (fontified t)) . -5226) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) 5228 (5226 . 5228)) nil (26353 49411 535257 605000) 0 nil])
([nil nil ((nil rear-nonsticky nil 600 . 601) (#("
" 0 1 (fontified nil)) . -612) (598 . 613) 597) ((#("
  float_t vx;
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (rear-nonsticky nil fontified nil) 3 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face c-type c-decl-id-start fontified nil) 10 11 (fontified nil) 11 12 (face font-lock-variable-name-face fontified nil) 12 13 (face font-lock-variable-name-face fontified nil) 13 14 (fontified nil) 14 15 (fontified nil)) . 598) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -14) (undo-tree-id129 . -14) (undo-tree-id130 . -14) (undo-tree-id131 . -14) (undo-tree-id132 . -14) (undo-tree-id133 . -14) (undo-tree-id134 . -14) (undo-tree-id135 . -14) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . -14) (undo-tree-id142 . -14) (undo-tree-id143 . -14) (undo-tree-id144 . -14) (undo-tree-id145 . -14) (undo-tree-id146 . -14) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (undo-tree-id149 . -14) (undo-tree-id150 . -14) (undo-tree-id151 . -14) (undo-tree-id152 . -14) (undo-tree-id153 . -14) (undo-tree-id154 . -14) (undo-tree-id155 . -14) (undo-tree-id156 . -14) (undo-tree-id157 . -14) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) (undo-tree-id161 . -14) (undo-tree-id162 . -14) (undo-tree-id163 . -14) (undo-tree-id164 . -14) (undo-tree-id165 . -14) (undo-tree-id166 . -14) (undo-tree-id167 . -14) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . -14) (undo-tree-id177 . -14) (undo-tree-id178 . -14) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14) (undo-tree-id185 . -14) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -14) (undo-tree-id193 . -14) (undo-tree-id194 . -14) (undo-tree-id195 . -14) (undo-tree-id196 . -12) (undo-tree-id197 . -12) (undo-tree-id198 . -12) (undo-tree-id199 . -12) (undo-tree-id200 . -12) (undo-tree-id201 . -12) (undo-tree-id202 . -12) (undo-tree-id203 . -12) (undo-tree-id204 . -12) (undo-tree-id205 . -12) (undo-tree-id206 . -12) (undo-tree-id207 . -12) (undo-tree-id208 . -12) (undo-tree-id209 . -12) (undo-tree-id210 . -12) (undo-tree-id211 . -12) (undo-tree-id212 . -12) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -12) (undo-tree-id220 . -12) (undo-tree-id221 . -12) (undo-tree-id222 . -12) (undo-tree-id223 . -12) (undo-tree-id224 . -12) (undo-tree-id225 . -12) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -12) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -12) (undo-tree-id252 . -12) (undo-tree-id253 . -12) (undo-tree-id254 . -12) (undo-tree-id255 . -12) (undo-tree-id256 . -1) (undo-tree-id257 . -12) (undo-tree-id258 . -12) (undo-tree-id259 . -12) (undo-tree-id260 . -12) (undo-tree-id261 . -12) (undo-tree-id262 . -12) (undo-tree-id263 . -12) (undo-tree-id264 . -12) (undo-tree-id265 . -12) (undo-tree-id266 . -12) (undo-tree-id267 . -12) (undo-tree-id268 . -12) (undo-tree-id269 . -12) (undo-tree-id270 . -12) (undo-tree-id271 . -12) (undo-tree-id272 . -12) (undo-tree-id273 . -12) (undo-tree-id274 . -12) (undo-tree-id275 . -12) (undo-tree-id276 . -12) (undo-tree-id277 . -12) (undo-tree-id278 . -12) (undo-tree-id279 . -12) (undo-tree-id280 . -12) (undo-tree-id281 . -12) (undo-tree-id282 . -12) (undo-tree-id283 . -12) (undo-tree-id284 . -12) (undo-tree-id285 . -12) (undo-tree-id286 . -12) (undo-tree-id287 . -12) (undo-tree-id288 . -12) (undo-tree-id289 . -12) (undo-tree-id290 . -12) (undo-tree-id291 . -12) (undo-tree-id292 . -12) (undo-tree-id293 . -12) (undo-tree-id294 . -12) (undo-tree-id295 . -12) (undo-tree-id296 . -12) (undo-tree-id297 . -12) (undo-tree-id298 . -12) (undo-tree-id299 . -12) (undo-tree-id300 . -12) (undo-tree-id301 . -12) (undo-tree-id302 . -12) (undo-tree-id303 . -12) (undo-tree-id304 . -12) (undo-tree-id305 . -12) (undo-tree-id306 . -12) (undo-tree-id307 . -12) (undo-tree-id308 . -12) (undo-tree-id309 . -12) (undo-tree-id310 . -12) (undo-tree-id311 . -12) (undo-tree-id312 . -12) (undo-tree-id313 . -12) (undo-tree-id314 . -12) (undo-tree-id315 . -12) (undo-tree-id316 . -12) (undo-tree-id317 . -12) (612 . 613) (nil rear-nonsticky nil 600 . 601)) (26353 48692 35480 663000) 0 nil])
([nil nil ((5253 . 5257) (#("    " 0 4 (fontified nil)) . 5252) (undo-tree-id4606 . -4) (undo-tree-id4607 . -4) (5252 . 5257) (#("    " 0 4 (fontified nil)) . 5251) (undo-tree-id4608 . -4) (undo-tree-id4609 . -4) (5255 . 5256) (5251 . 5255)) nil (26353 49411 535253 825000) 0 nil])
([nil nil ((610 . 611) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . 610)) ((610 . 611) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . 610)) (26353 48691 832787 321000) 0 nil])
([nil nil ((5252 . 5256)) nil (26353 49411 535252 121000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -626) (612 . 627) 610) ((#("
  float_t vy;
" 0 1 (fontified t) 1 3 (fontified nil) 3 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face c-type c-decl-id-start fontified nil) 10 11 (fontified nil) 11 12 (face font-lock-variable-name-face fontified nil) 12 13 (face font-lock-variable-name-face fontified nil) 13 14 (fontified nil) 14 15 (fontified nil)) . 612) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -11) (undo-tree-id3 . -11) (undo-tree-id4 . -11) (undo-tree-id5 . -11) (undo-tree-id6 . -11) (undo-tree-id7 . -11) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -11) (undo-tree-id19 . -11) (undo-tree-id20 . -11) (undo-tree-id21 . -11) (undo-tree-id22 . -11) (undo-tree-id23 . -11) (undo-tree-id24 . -11) (undo-tree-id25 . -11) (undo-tree-id26 . -11) (undo-tree-id27 . -11) (undo-tree-id28 . -1) (undo-tree-id29 . -11) (undo-tree-id30 . -11) (undo-tree-id31 . -11) (undo-tree-id32 . -11) (undo-tree-id33 . -11) (undo-tree-id34 . -11) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -11) (undo-tree-id41 . -11) (undo-tree-id42 . -11) (undo-tree-id43 . -11) (undo-tree-id44 . -11) (undo-tree-id45 . -11) (undo-tree-id46 . -11) (undo-tree-id47 . -11) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (undo-tree-id56 . -11) (undo-tree-id57 . -11) (undo-tree-id58 . -11) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -11) (undo-tree-id63 . -11) (undo-tree-id64 . -11) (undo-tree-id65 . -11) (undo-tree-id66 . -11) (undo-tree-id67 . -11) (undo-tree-id68 . -11) (undo-tree-id69 . -11) (undo-tree-id70 . -11) (undo-tree-id71 . -11) (undo-tree-id72 . -11) (undo-tree-id73 . -11) (undo-tree-id74 . -11) (undo-tree-id75 . -11) (undo-tree-id76 . -11) (undo-tree-id77 . -11) (undo-tree-id78 . -11) (undo-tree-id79 . -11) (undo-tree-id80 . -11) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) (undo-tree-id91 . -11) (undo-tree-id92 . -11) (undo-tree-id93 . -11) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . -11) (undo-tree-id98 . -11) (undo-tree-id99 . -11) (626 . 627)) (26353 48691 538377 429000) 0 nil])
([nil nil ((5279 . 5280) (5271 . 5279) (#("EN" 0 2 (fontified nil)) . 5271) (5271 . 5273) (#("END_BYTE" 0 8 (fontified nil)) . -5271) (undo-tree-id4597 . -8) (5271 . 5279) (#("EN" 0 1 (fontified t) 1 2 (fontified t)) . -5271) (undo-tree-id4598 . -2) (undo-tree-id4599 . -2) 5273 (5268 . 5273) (5260 . 5268) (#("end_byte" 0 8 (fontified nil)) . -5260) (undo-tree-id4600 . -8) (5260 . 5268) (#("en" 0 1 (fontified t) 1 2 (fontified t)) . -5260) (undo-tree-id4601 . -2) (undo-tree-id4602 . -2) 5262 (5259 . 5262) (5255 . 5259) (#("da" 0 2 (fontified nil)) . 5255) (5255 . 5257) (#("data" 0 4 (fontified nil)) . -5255) (undo-tree-id4603 . -4) (5255 . 5259) (#("da" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5255) (undo-tree-id4604 . -2) (undo-tree-id4605 . -2) 5257 (5255 . 5257) (5251 . 5255)) nil (26353 49411 535251 86000) 0 nil])
([nil nil ((#("vy" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . 623) (undo-tree-id1 . -2)) ((623 . 625)) (26353 48690 913636 980000) 0 nil])
([nil nil ((5328 . 5329) (5321 . 5328) (#("ui" 0 2 (fontified nil)) . 5321) (5321 . 5323) (#("uint8_t" 0 7 (fontified nil)) . -5321) (undo-tree-id4574 . -7) (5321 . 5328) (#("ui" 0 1 (fontified t) 1 2 (fontified t)) . -5321) (undo-tree-id4575 . -2) (undo-tree-id4576 . -2) 5323 (5321 . 5323) (5321 . 5322) (#("uint8_t *data" 0 7 (face font-lock-type-face fontified nil) 7 9 (fontified nil) 9 13 (face font-lock-variable-name-face fontified nil)) . 5321) (undo-tree-id4577 . -13) (5320 . 5321) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5320 5336 nil nil nil t #s(yas--field 2 5338 5369 nil nil nil t nil)) #s(yas--field 2 5338 5369 nil nil nil t nil)) nil 0 nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil nil)) (5300 . 5346) (#("calculate_cr8x_fast(${1:uint8_t *data}, ${2:size_t len})" 0 56 (fontified nil)) . 5300) (5300 . 5356) (#("cal" 0 3 (fontified nil)) . 5300) (5300 . 5303) (#("calculate_cr8x_fast(uint8_t *data, size_t len)" 0 46 (fontified nil)) . -5300) (undo-tree-id4578 . -46) (5300 . 5346) (#("cal" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -5300) (undo-tree-id4579 . -3) (undo-tree-id4580 . -3) 5303 (5298 . 5303) (5293 . 5298) (5286 . 5293) (#("ui" 0 2 (fontified nil)) . 5286) (5286 . 5288) (#("uint8_t" 0 7 (fontified nil)) . -5286) (undo-tree-id4581 . -7) (5286 . 5293) (#("uin" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5286) (undo-tree-id4582 . -3) (undo-tree-id4583 . -3) 5289 (5286 . 5289) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5286) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5287) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5288) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5289) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) 5290 (5286 . 5290) (#("da" 0 2 (fontified nil)) . 5286) (5286 . 5288) (#("data" 0 4 (fontified nil)) . -5286) (undo-tree-id4592 . -4) (5286 . 5290) (#("da" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5286) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) 5288 (5286 . 5288) (5282 . 5286) (#("    " 0 4 (fontified nil)) . 5281) (undo-tree-id4595 . -4) (undo-tree-id4596 . -4) (5280 . 5286)) nil (26353 49411 535242 924000) 0 nil])
([nil nil ((623 . 626)) ((#("yaw" 0 3 (face font-lock-variable-name-face fontified t)) . 623)) (26353 48690 570492 350000) 0 nil])
([nil nil ((5345 . 5349) (#("da" 0 2 (fontified nil)) . 5345) (5345 . 5347) (#("data" 0 4 (fontified nil)) . -5345) (undo-tree-id4557 . -4) (5345 . 5349) (#("da" 0 1 (fontified t) 1 2 (fontified t)) . -5345) (undo-tree-id4558 . -2) (undo-tree-id4559 . -2) 5347 (5345 . 5347) (apply yas--snippet-revive 5338 5346 #s(yas--snippet nil nil #s(yas--exit 5345 nil) 1 nil nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5345 nil) 1 nil nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil)) (5338 . 5346) (#("sizeof($0)" 0 10 (fontified nil)) . 5338) (undo-tree-id4560 . -10) (5338 . 5348) (#("si" 0 2 (fontified nil)) . 5338) (undo-tree-id4561 . -2) (5338 . 5340) (#("sizeof(expression-or-type)" 0 26 (fontified nil)) . -5338) (undo-tree-id4562 . -26) (undo-tree-id4563 . -26) (5338 . 5364) (#("si" 0 1 (fontified t) 1 2 (fontified t)) . -5338) (undo-tree-id4564 . -2) (undo-tree-id4565 . -2) (undo-tree-id4566 . -2) 5340 (5339 . 5340) (#("size_t len" 0 10 (fontified nil)) . 5339) (undo-tree-id4567 . -10) (5338 . 5339) (5332 . 5336) (#("da" 0 2 (fontified nil)) . 5332) (undo-tree-id4568 . -2) (5332 . 5334) (#("data" 0 4 (fontified nil)) . -5332) (undo-tree-id4569 . -4) (undo-tree-id4570 . -4) (5332 . 5336) (#("da" 0 1 (fontified t) 1 2 (fontified t)) . -5332) (undo-tree-id4571 . -2) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) 5334 (5330 . 5334)) nil (26353 49411 535212 91000) 0 nil])
([nil nil ((595 . 600) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -595) 596 (t 26353 18384 337159 394000)) ((595 . 596) (#("odom_" 0 5 (face font-lock-variable-name-face fontified t)) . 595)) (26353 48690 152996 962000) 0 nil])
([nil nil ((5365 . 5368) (#("crc" 0 3 (fontified nil)) . -5365) (undo-tree-id4485 . -3) (5365 . 5368) (#("cr" 0 1 (fontified t) 1 2 (fontified t)) . -5365) (undo-tree-id4486 . -2) (undo-tree-id4487 . -2) (undo-tree-id4488 . -2) (undo-tree-id4489 . -2) (undo-tree-id4490 . -2) (undo-tree-id4491 . -2) (undo-tree-id4492 . -2) (undo-tree-id4493 . -2) (undo-tree-id4494 . -2) (undo-tree-id4495 . -2) (undo-tree-id4496 . -2) (undo-tree-id4497 . -2) (undo-tree-id4498 . -2) (undo-tree-id4499 . -2) (undo-tree-id4500 . -2) (undo-tree-id4501 . -2) (undo-tree-id4502 . -2) (undo-tree-id4503 . -2) (undo-tree-id4504 . -2) (undo-tree-id4505 . -2) (undo-tree-id4506 . -2) (undo-tree-id4507 . -2) (undo-tree-id4508 . -2) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (undo-tree-id4520 . -2) (undo-tree-id4521 . -2) (undo-tree-id4522 . -2) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) (undo-tree-id4525 . -2) (undo-tree-id4526 . -2) (undo-tree-id4527 . -2) (undo-tree-id4528 . -2) (undo-tree-id4529 . -2) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -2) (undo-tree-id4538 . -2) (undo-tree-id4539 . -2) (undo-tree-id4540 . -2) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (undo-tree-id4543 . -2) (undo-tree-id4544 . -2) (undo-tree-id4545 . -2) (undo-tree-id4546 . -2) 5367 (5364 . 5367) (5360 . 5364) (#("da" 0 2 (fontified nil)) . 5360) (5360 . 5362) (#("data" 0 4 (fontified nil)) . -5360) (undo-tree-id4547 . -4) (5360 . 5364) (#("da" 0 1 (fontified t) 1 2 (fontified t)) . -5360) (undo-tree-id4548 . -2) (undo-tree-id4549 . -2) 5362 (5360 . 5362) (apply yas--snippet-revive 5353 5361 #s(yas--snippet nil nil #s(yas--exit 5360 nil) 2 nil nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5360 nil) 2 nil nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil)) (5353 . 5361) (#("sizeof($0)" 0 10 (fontified nil)) . 5353) (undo-tree-id4550 . -10) (5353 . 5363) (#("si" 0 2 (fontified nil)) . 5353) (undo-tree-id4551 . -2) (5353 . 5355) (#("sizeof(expression-or-type)" 0 26 (fontified nil)) . -5353) (undo-tree-id4552 . -26) (undo-tree-id4553 . -26) (5353 . 5379) (#("si" 0 1 (fontified t) 1 2 (fontified t)) . -5353) (undo-tree-id4554 . -2) (undo-tree-id4555 . -2) (undo-tree-id4556 . -2) 5355 (5350 . 5355)) nil (26353 49411 535199 845000) 0 nil])
([nil nil ((613 . 618) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -613) 614) ((613 . 614) (#("odom_" 0 5 (face font-lock-variable-name-face fontified t)) . 613)) (26353 48689 53930 994000) 0 nil])
([nil nil ((5370 . 5371) (apply yas--snippet-revive 5300 5370 #s(yas--snippet nil (#s(yas--field 1 5320 5336 nil nil nil t #s(yas--field 2 5338 5369 nil nil nil t nil)) #s(yas--field 2 5338 5369 nil nil nil t nil)) nil 0 nil #s(yas--field 2 5338 5369 nil nil nil t nil) nil nil))) nil (26353 49411 535156 386000) 0 nil])
([nil nil ((632 . 636) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -632) (undo-tree-id30 . -1) 633 (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -633) (undo-tree-id32 . -1) 634 (631 . 634)) ((#("opd" 0 1 (face font-lock-variable-name-face fontified nil) 1 2 (face font-lock-variable-name-face fontified nil) 2 3 (face font-lock-variable-name-face fontified nil)) . 631) (632 . 634) (#("dom_" 0 4 (face font-lock-variable-name-face fontified t)) . 632)) (26353 48686 747722 742000) 0 nil])
([nil nil ((#("uint8" 0 5 (face font-lock-type-face fontified t)) . 5286) (undo-tree-id4655 . -4) (t 26353 49411 548741 617000)) nil (26353 49424 233108 710000) 0 nil])
([nil nil ((apply -9 585 652 undo--wrap-and-run-primitive-undo 585 652 ((629 . 632) (608 . 611) (587 . 590) 585))) ((apply 9 585 643 undo--wrap-and-run-primitive-undo 585 643 ((#("// " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 587) (#("// " 0 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 608) (#("// " 0 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 629) 1))) (26353 18609 774933 890000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-type-face fontified t)) . 5286) (undo-tree-id4654 . -1)) nil (26353 49424 233107 567000) 0 nil])
nil
([nil nil ((#("t " 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t) 1 2 (fontified t)) . 5286) (undo-tree-id4652 . -1) (undo-tree-id4653 . -2)) nil (26353 49424 233106 151000) 0 nil])
([nil nil ((#("crc " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 5286) (undo-tree-id4650 . -3) (undo-tree-id4651 . -4)) nil (26353 49424 233104 505000) 0 nil])
([nil nil ((5294 . 5298) (5293 . 5294) (5286 . 5293) (#("ui" 0 2 (fontified nil)) . 5286) (5286 . 5288) (#("uint8_t" 0 7 (fontified nil)) . -5286) (undo-tree-id4647 . -7) (5286 . 5293) (#("ui" 0 1 (fontified t) 1 2 (fontified t)) . -5286) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2) 5288 (5286 . 5288)) nil (26353 49424 233099 519000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5373) (undo-tree-id4624 . -4) (undo-tree-id4625 . -4) (undo-tree-id4626 . -4) (undo-tree-id4627 . -4) (undo-tree-id4628 . -4) (undo-tree-id4629 . -4) (undo-tree-id4630 . -4) (undo-tree-id4631 . -4) (undo-tree-id4632 . -4) (undo-tree-id4633 . -4) (undo-tree-id4634 . -4) (undo-tree-id4635 . -4) (undo-tree-id4636 . -4) (undo-tree-id4637 . -4) (undo-tree-id4638 . -4) (undo-tree-id4639 . -4) (undo-tree-id4640 . -4) (undo-tree-id4641 . -4) (undo-tree-id4642 . -4) (undo-tree-id4643 . -4) (undo-tree-id4644 . -4) 5377 (5373 . 5377) (#("    " 0 4 (fontified nil)) . 5372) (undo-tree-id4645 . -4) (undo-tree-id4646 . -4) (5371 . 5377)) nil (26353 49424 233094 448000) 0 nil])
([nil nil ((5391 . 5392) (5388 . 5391) (#("c" 0 1 (fontified nil)) . 5388) (5388 . 5389) (#("crc" 0 3 (fontified nil)) . -5388) (undo-tree-id4656 . -3) (5388 . 5391) (#("c" 0 1 (fontified t)) . -5388) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) 5389 (5386 . 5389) (#("-" 0 1 (fontified t)) . -5386) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (#(" " 0 1 (fontified t)) . -5387) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (#("c" 0 1 (fontified t)) . -5388) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) 5389 (5385 . 5389) (5382 . 5385) (#("crc" 0 3 (fontified nil)) . -5382) (undo-tree-id5397 . -3) (5382 . 5385) (#("cr" 0 1 (fontified t) 1 2 (fontified t)) . -5382) (undo-tree-id5398 . -2) (undo-tree-id5399 . -2) 5384 (5381 . 5384) (5377 . 5381) (#("da" 0 2 (fontified nil)) . 5377) (5377 . 5379) (#("data" 0 4 (fontified nil)) . -5377) (undo-tree-id5400 . -4) (5377 . 5381) (#("da" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -5377) (undo-tree-id5401 . -2) (undo-tree-id5402 . -2) 5379 (5377 . 5379) (5373 . 5377) (t 26353 49424 274858 92000)) nil (26353 49431 709438 828000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5281) (t 26353 49431 749926 506000)) nil (26353 49445 916874 204000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5371)) nil (26353 49445 916873 273000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5218) (undo-tree-id5403 . -4) (undo-tree-id5404 . -4) 5222 (5218 . 5222) (#("    " 0 4 (fontified nil)) . 5217) (undo-tree-id5405 . -4) (undo-tree-id5406 . -4) (5216 . 5222)) nil (26353 49445 916871 629000) 0 nil])
([nil nil ((5225 . 5244) (5224 . 5225) (5222 . 5224) (5218 . 5222)) nil (26353 49445 916858 730000) 0 nil])
([nil nil ((5156 . 5164) (5146 . 5156) (5145 . 5146) (t 26353 49445 931056 292000)) nil (26353 49470 53095 300000) 0 nil])
([nil nil ((#("########## " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 10 (fontified t) 10 11 (fontified t)) . 5146) (undo-tree-id5407 . -10) (undo-tree-id5408 . -11) (undo-tree-id5409 . -11) (undo-tree-id5410 . -11) (undo-tree-id5411 . -11) (undo-tree-id5412 . -11) (undo-tree-id5413 . -11) (undo-tree-id5414 . -11) (undo-tree-id5415 . -11) (undo-tree-id5416 . -11) (undo-tree-id5417 . -11) (undo-tree-id5418 . -11) (undo-tree-id5419 . -11) (undo-tree-id5420 . -11) (undo-tree-id5421 . -11) (undo-tree-id5422 . -11) (undo-tree-id5423 . -11) (undo-tree-id5424 . -11) (undo-tree-id5425 . -11) (undo-tree-id5426 . -11) (undo-tree-id5427 . -11) (undo-tree-id5428 . -11) (undo-tree-id5429 . -11) (undo-tree-id5430 . -11) (undo-tree-id5431 . -11) (undo-tree-id5432 . -11) (undo-tree-id5433 . -11) (undo-tree-id5434 . -11) (undo-tree-id5435 . -11)) nil (26353 49470 53093 559000) 0 nil])
([nil nil ((5148 . 5149) (5146 . 5148)) nil (26353 49470 53070 450000) 0 nil])
([nil nil ((5156 . 5162)) nil (26353 49470 53066 272000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . 5015) (5017 . 5018) 5014 (#("r" 0 1 (fontified t)) . 5072) (5074 . 5075) 5071 (t 26353 49470 93277 386000)) nil (26353 49526 752829 643000) 0 nil])
([nil nil ((6471 . 6472) (6466 . 6469) (#("     " 0 5 (fontified nil)) . 6466) (6471 . 6473) (t 26353 49526 793796 163000)) nil (26354 30794 692649 787000) 0 nil])
([nil nil ((6512 . 6513) (6504 . 6512) (6501 . 6504) (6500 . 6503) (6499 . 6501) (6498 . 6499) (#("else" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 6498) (undo-tree-id5436 . -3) (undo-tree-id5437 . -4) (6494 . 6498) 6498 (6493 . 6498)) nil (26354 30794 692640 233000) 0 nil])
([nil nil ((#("    while (1) {
" 0 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-3-face) fontified t) 11 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-3-face) fontified t) 13 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 16 (fontified t)) . 5602) (undo-tree-id5461 . -15) (undo-tree-id5462 . -14) 5616 (t 26354 30794 744383 575000)) nil (26354 30804 502277 315000) 0 nil])
([nil nil ((#("    }
" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 6 (fontified t)) . 6509) (undo-tree-id5438 . -5) (undo-tree-id5439 . -6) (undo-tree-id5440 . -6) (undo-tree-id5441 . -6) (undo-tree-id5442 . -6) (undo-tree-id5443 . -6) (undo-tree-id5444 . -6) (undo-tree-id5445 . -6) (undo-tree-id5446 . -6) (undo-tree-id5447 . -6) (undo-tree-id5448 . -6) (undo-tree-id5449 . -6) (undo-tree-id5450 . -6) (undo-tree-id5451 . -6) (undo-tree-id5452 . -6) (undo-tree-id5453 . -6) (undo-tree-id5454 . -6) (undo-tree-id5455 . -6) (undo-tree-id5456 . -6) (undo-tree-id5457 . -6) (undo-tree-id5458 . -6) (undo-tree-id5459 . -6) (undo-tree-id5460 . -6)) nil (26354 30804 502263 530000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -6780) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 6781 (t 26354 30804 529511 338000)) nil (26361 5989 13861 849000) 0 nil])
([nil nil ((#("#pragma pack(push, 1)
struct CommunicationData {
  uint8_t start_byte;

  // Twist For Base
  uint8_t x;
  uint8_t y;
  uint8_t omega;

  // Vector For Shooter
  uint8_t ax;
  uint8_t ay;
  uint8_t az;

  // Position of Catcher
  uint8_t on_off;
  uint8_t theta;
  uint8_t zz;

  // end byte and crc
  uint8_t end_byte;
  uint8_t crc;
};
#pragma pack(pop)

void print_this(CommunicationData cd) {
  std::cout << \"####COMMUNICATIONDATA####\" << std::endl
            << \"x:\\t\" << (int)cd.x << std::endl
            << \"y:\\t\" << (int)cd.y << std::endl
            << \"omega:\\t\" << (int)cd.omega << std::endl
            << \"ax:\\t\" << (int)cd.ax << std::endl
            << \"ay:\\t\" << (int)cd.ay << std::endl
            << \"az:\\t\" << (int)cd.az << std::endl
            << \"on_off:\\t\" << (int)cd.on_off << std::endl
            << \"theta:\\t\" << (int)cd.theta << std::endl
            << \"zz:\\t\" << (int)cd.zz << std::endl;
}

const uint8_t crc8x_table[256] = {
    0x00, 0x31, 0x62, 0x53, 0xC4, 0xF5, 0xA6, 0x97, 0xB9, 0x88, 0xDB, 0xEA,
    0x7D, 0x4C, 0x1F, 0x2E, 0x43, 0x72, 0x21, 0x10, 0x87, 0xB6, 0xE5, 0xD4,
    0xFA, 0xCB, 0x98, 0xA9, 0x3E, 0x0F, 0x5C, 0x6D, 0x86, 0xB7, 0xE4, 0xD5,
    0x42, 0x73, 0x20, 0x11, 0x3F, 0x0E, 0x5D, 0x6C, 0xFB, 0xCA, 0x99, 0xA8,
    0xC5, 0xF4, 0xA7, 0x96, 0x01, 0x30, 0x63, 0x52, 0x7C, 0x4D, 0x1E, 0x2F,
    0xB8, 0x89, 0xDA, 0xEB, 0x3D, 0x0C, 0x5F, 0x6E, 0xF9, 0xC8, 0x9B, 0xAA,
    0x84, 0xB5, 0xE6, 0xD7, 0x40, 0x71, 0x22, 0x13, 0x7E, 0x4F, 0x1C, 0x2D,
    0xBA, 0x8B, 0xD8, 0xE9, 0xC7, 0xF6, 0xA5, 0x94, 0x03, 0x32, 0x61, 0x50,
    0xBB, 0x8A, 0xD9, 0xE8, 0x7F, 0x4E, 0x1D, 0x2C, 0x02, 0x33, 0x60, 0x51,
    0xC6, 0xF7, 0xA4, 0x95, 0xF8, 0xC9, 0x9A, 0xAB, 0x3C, 0x0D, 0x5E, 0x6F,
    0x41, 0x70, 0x23, 0x12, 0x85, 0xB4, 0xE7, 0xD6, 0x7A, 0x4B, 0x18, 0x29,
    0xBE, 0x8F, 0xDC, 0xED, 0xC3, 0xF2, 0xA1, 0x90, 0x07, 0x36, 0x65, 0x54,
    0x39, 0x08, 0x5B, 0x6A, 0xFD, 0xCC, 0x9F, 0xAE, 0x80, 0xB1, 0xE2, 0xD3,
    0x44, 0x75, 0x26, 0x17, 0xFC, 0xCD, 0x9E, 0xAF, 0x38, 0x09, 0x5A, 0x6B,
    0x45, 0x74, 0x27, 0x16, 0x81, 0xB0, 0xE3, 0xD2, 0xBF, 0x8E, 0xDD, 0xEC,
    0x7B, 0x4A, 0x19, 0x28, 0x06, 0x37, 0x64, 0x55, 0xC2, 0xF3, 0xA0, 0x91,
    0x47, 0x76, 0x25, 0x14, 0x83, 0xB2, 0xE1, 0xD0, 0xFE, 0xCF, 0x9C, 0xAD,
    0x3A, 0x0B, 0x58, 0x69, 0x04, 0x35, 0x66, 0x57, 0xC0, 0xF1, 0xA2, 0x93,
    0xBD, 0x8C, 0xDF, 0xEE, 0x79, 0x48, 0x1B, 0x2A, 0xC1, 0xF0, 0xA3, 0x92,
    0x05, 0x34, 0x67, 0x56, 0x78, 0x49, 0x1A, 0x2B, 0xBC, 0x8D, 0xDE, 0xEF,
    0x82, 0xB3, 0xE0, 0xD1, 0x46, 0x77, 0x24, 0x15, 0x3B, 0x0A, 0x59, 0x68,
    0xFF, 0xCE, 0x9D, 0xAC};

uint8_t calculate_cr8x_fast(uint8_t *data, size_t len) {
  uint8_t crc = 0xFF; // init value
  for (size_t i = 0; i < len; i++) {
    crc = crc8x_table[data[i] ^ crc];
  }
  return crc;
}

class SerialBridge {
public:
  CommunicationData standard;
  uint8_t start_byte_search;

  int file_description;

  int open_serial_port(char *portname) {
    int fd = open(portname, O_RDWR | O_NOCTTY | O_SYNC);

    if (fd < 0) {
      std::cerr << \"[ERROR]\"
                << \"Error Opening \" << portname << std::endl;

      exit(1);
    }

    return fd;
  }

  // Function to configure the serial port
  bool configureSerialPort(int fd, int speed) {
    struct termios tty;
    if (tcgetattr(fd, &tty) != 0) {
      std::cerr << \"Error from tcgetattr: \" << strerror(errno) << std::endl;
      return false;
    }

    cfsetospeed(&tty, speed);
    cfsetispeed(&tty, speed);

    tty.c_cflag = (tty.c_cflag & ~CSIZE) | CS8; // 8-bit characters
    tty.c_iflag &= ~IGNBRK;                     // disable break processing
    tty.c_lflag = 0;     // no signaling chars, no echo, no
                         // canonical processing
    tty.c_oflag = 0;     // no remapping, no delays
    tty.c_cc[VMIN] = 0;  // read doesn't block
    tty.c_cc[VTIME] = 5; // 0.5 seconds read timeout

    tty.c_iflag &= ~(IXON | IXOFF | IXANY); // shut off xon/xoff ctrl

    tty.c_cflag |= (CLOCAL | CREAD);   // ignore modem controls,
                                       // enable reading
    tty.c_cflag &= ~(PARENB | PARODD); // shut off parity
    tty.c_cflag &= ~CSTOPB;
    tty.c_cflag &= ~CRTSCTS;

    if (tcsetattr(fd, TCSANOW, &tty) != 0) {
      std::cerr << \"Error from tcsetattr: \" << strerror(errno) << std::endl;
      return false;
    }
    return true;
  }

  // Function to read data from the serial port
  int readFromSerialPort(int fd, char *buffer, size_t size) {
    return read(fd, buffer, size);
  }

  // Function to write data to the serial port
  int writeToSerialPort(int fd, const char *buffer, size_t size) {
    return write(fd, buffer, size);
  }

  // Function to close the serial port
  void closeSerialPort(int fd) { close(fd); }

  SerialBridge(char *port_location) {
    file_description = open_serial_port(port_location);

    if (!configureSerialPort(file_description, 115200)) { // run at 115200
      exit(1);
    }
  }

  bool send_struct(CommunicationData data) {

    // make the data right
    data.start_byte = START_BYTE;
    data.end_byte = END_BYTE;
    uint8_t crc = calculate_cr8x_fast((uint8_t*) &data, sizeof(data) - sizeof(data.crc));
    data.crc = crc;
    
    
    writeToSerialPort(file_description, (char *)&data, sizeof(data));
    return true;
  }

  CommunicationData get_data() {

    CommunicationData buffer;

      // fill the buffer with zeros
      
      memset(&buffer, 0, sizeof(buffer));



      start_byte_search = 0x00;

      while (start_byte_search != START_BYTE) {
        readFromSerialPort(file_description, (char *)&start_byte_search,
                           sizeof(start_byte_search));
      }

      buffer.start_byte =
          start_byte_search; // set it to AA, which it will be because it has
                             // come out of the loop

      readFromSerialPort(file_description, (char *)&buffer.x,
                         sizeof(buffer) - sizeof(buffer.start_byte));

      // check the crc, if it is not right go to begining

      if (buffer.end_byte == END_BYTE) {
        if (calculate_cr8x_fast((uint8_t *)&buffer,
                                sizeof(buffer) - sizeof(buffer.crc)) ==
            buffer.crc) {
	  ///     break;
        } else {
	  throw -1;
	}
      }
    return buffer;
  }

private:
}" 0 1 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 1 7 (c-in-sws t face font-lock-preprocessor-face fontified t) 7 12 (c-in-sws t fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) c-in-sws t fontified t) 13 20 (c-in-sws t fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) c-in-sws t fontified t) 21 22 (c-in-sws t fontified t) 22 23 (face font-lock-keyword-face c-is-sws t fontified t) 23 27 (face font-lock-keyword-face fontified t) 27 28 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 46 (face font-lock-type-face fontified t) 46 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) fontified t) 48 51 (fontified t) 51 57 (face font-lock-type-face fontified t) 57 58 (face font-lock-type-face c-type c-decl-id-start fontified t) 58 59 (fontified t) 59 69 (face font-lock-variable-name-face fontified t) 69 72 (fontified t) 72 74 (c-is-sws t c-in-sws t fontified t) 74 75 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 75 77 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 77 92 (c-in-sws t face font-lock-comment-face fontified t) 92 94 (c-in-sws t c-is-sws t fontified t) 94 95 (face font-lock-type-face c-is-sws t fontified t) 95 100 (face font-lock-type-face fontified t) 100 101 (face font-lock-type-face c-type c-decl-id-start fontified t) 101 102 (fontified t) 102 103 (face font-lock-variable-name-face fontified t) 103 107 (fontified t) 107 113 (face font-lock-type-face fontified t) 113 114 (face font-lock-type-face c-type c-decl-id-start fontified t) 114 115 (fontified t) 115 116 (face font-lock-variable-name-face fontified t) 116 120 (fontified t) 120 126 (face font-lock-type-face fontified t) 126 127 (face font-lock-type-face c-type c-decl-id-start fontified t) 127 128 (fontified t) 128 133 (face font-lock-variable-name-face fontified t) 133 136 (fontified t) 136 138 (c-is-sws t c-in-sws t fontified t) 138 139 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 139 141 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 141 160 (c-in-sws t face font-lock-comment-face fontified t) 160 162 (c-in-sws t c-is-sws t fontified t) 162 163 (face font-lock-type-face c-is-sws t fontified t) 163 168 (face font-lock-type-face fontified t) 168 169 (face font-lock-type-face c-type c-decl-id-start fontified t) 169 170 (fontified t) 170 172 (face font-lock-variable-name-face fontified t) 172 176 (fontified t) 176 182 (face font-lock-type-face fontified t) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified t) 183 184 (fontified t) 184 186 (face font-lock-variable-name-face fontified t) 186 190 (fontified t) 190 196 (face font-lock-type-face fontified t) 196 197 (face font-lock-type-face c-type c-decl-id-start fontified t) 197 198 (fontified t) 198 200 (face font-lock-variable-name-face fontified t) 200 203 (fontified t) 203 205 (c-is-sws t c-in-sws t fontified t) 205 206 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 206 208 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 208 228 (c-in-sws t face font-lock-comment-face fontified t) 228 230 (c-in-sws t c-is-sws t fontified t) 230 231 (face font-lock-type-face c-is-sws t fontified t) 231 236 (face font-lock-type-face fontified t) 236 237 (face font-lock-type-face c-type c-decl-id-start fontified t) 237 238 (fontified t) 238 244 (face font-lock-variable-name-face fontified t) 244 248 (fontified t) 248 254 (face font-lock-type-face fontified t) 254 255 (face font-lock-type-face c-type c-decl-id-start fontified t) 255 256 (fontified t) 256 261 (face font-lock-variable-name-face fontified t) 261 265 (fontified t) 265 271 (face font-lock-type-face fontified t) 271 272 (face font-lock-type-face c-type c-decl-id-start fontified t) 272 273 (fontified t) 273 275 (face font-lock-variable-name-face fontified t) 275 278 (fontified t) 278 280 (c-is-sws t c-in-sws t fontified t) 280 281 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 281 283 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 283 300 (c-in-sws t face font-lock-comment-face fontified t) 300 302 (c-in-sws t c-is-sws t fontified t) 302 303 (face font-lock-type-face c-is-sws t fontified t) 303 308 (face font-lock-type-face fontified t) 308 309 (face font-lock-type-face c-type c-decl-id-start fontified t) 309 310 (fontified t) 310 318 (face font-lock-variable-name-face fontified t) 318 322 (fontified t) 322 328 (face font-lock-type-face fontified t) 328 329 (face font-lock-type-face c-type c-decl-id-start fontified t) 329 330 (fontified t) 330 333 (face font-lock-variable-name-face fontified t) 333 335 (fontified t) 335 336 (face (rainbow-delimiters-depth-1-face) fontified t) 336 338 (fontified t) 338 339 (c-in-sws t c-is-sws t face font-lock-preprocessor-face fontified t) 339 345 (c-in-sws t face font-lock-preprocessor-face fontified t) 345 350 (c-in-sws t fontified t) 350 351 (face (rainbow-delimiters-depth-1-face) c-in-sws t fontified t) 351 354 (c-in-sws t fontified t) 354 355 (face (rainbow-delimiters-depth-1-face) c-in-sws t fontified t) 355 356 (c-in-sws t fontified t) 356 357 (c-is-sws t fontified t) 357 358 (face font-lock-type-face c-is-sws t fontified t) 358 360 (face font-lock-type-face fontified t) 360 361 (face font-lock-type-face c-type c-decl-id-start fontified t) 361 362 (fontified t) 362 372 (face font-lock-function-name-face fontified t) 372 373 (face (rainbow-delimiters-depth-1-face) c-type c-decl-arg-start fontified t) 373 390 (face font-lock-type-face fontified t) 390 391 (fontified t) 391 393 (face font-lock-variable-name-face fontified t) 393 394 (face (rainbow-delimiters-depth-1-face) fontified t) 394 395 (fontified t) 395 396 (face (rainbow-delimiters-depth-1-face) fontified t) 396 399 (fontified t) 399 402 (face font-lock-constant-face fontified t) 402 412 (fontified t) 412 439 (face font-lock-string-face fontified t) 439 443 (fontified t) 443 446 (face font-lock-constant-face fontified t) 446 468 (fontified t) 468 474 (face font-lock-string-face fontified t) 474 478 (fontified t) 478 479 (face (rainbow-delimiters-depth-2-face) fontified t) 479 482 (face font-lock-type-face fontified t) 482 483 (face (rainbow-delimiters-depth-2-face) fontified t) 483 491 (fontified t) 491 494 (face font-lock-constant-face fontified t) 494 516 (fontified t) 516 522 (face font-lock-string-face fontified t) 522 526 (fontified t) 526 527 (face (rainbow-delimiters-depth-2-face) fontified t) 527 530 (face font-lock-type-face fontified t) 530 531 (face (rainbow-delimiters-depth-2-face) fontified t) 531 539 (fontified t) 539 542 (face font-lock-constant-face fontified t) 542 564 (fontified t) 564 574 (face font-lock-string-face fontified t) 574 578 (fontified t) 578 579 (face (rainbow-delimiters-depth-2-face) fontified t) 579 582 (face font-lock-type-face fontified t) 582 583 (face (rainbow-delimiters-depth-2-face) fontified t) 583 595 (fontified t) 595 598 (face font-lock-constant-face fontified t) 598 620 (fontified t) 620 627 (face font-lock-string-face fontified t) 627 631 (fontified t) 631 632 (face (rainbow-delimiters-depth-2-face) fontified t) 632 635 (face font-lock-type-face fontified t) 635 636 (face (rainbow-delimiters-depth-2-face) fontified t) 636 645 (fontified t) 645 648 (face font-lock-constant-face fontified t) 648 670 (fontified t) 670 677 (face font-lock-string-face fontified t) 677 681 (fontified t) 681 682 (face (rainbow-delimiters-depth-2-face) fontified t) 682 685 (face font-lock-type-face fontified t) 685 686 (face (rainbow-delimiters-depth-2-face) fontified t) 686 695 (fontified t) 695 698 (face font-lock-constant-face fontified t) 698 720 (fontified t) 720 727 (face font-lock-string-face fontified t) 727 731 (fontified t) 731 732 (face (rainbow-delimiters-depth-2-face) fontified t) 732 735 (face font-lock-type-face fontified t) 735 736 (face (rainbow-delimiters-depth-2-face) fontified t) 736 745 (fontified t) 745 748 (face font-lock-constant-face fontified t) 748 770 (fontified t) 770 781 (face font-lock-string-face fontified t) 781 785 (fontified t) 785 786 (face (rainbow-delimiters-depth-2-face) fontified t) 786 789 (face font-lock-type-face fontified t) 789 790 (face (rainbow-delimiters-depth-2-face) fontified t) 790 803 (fontified t) 803 806 (face font-lock-constant-face fontified t) 806 828 (fontified t) 828 838 (face font-lock-string-face fontified t) 838 842 (fontified t) 842 843 (face (rainbow-delimiters-depth-2-face) fontified t) 843 846 (face font-lock-type-face fontified t) 846 847 (face (rainbow-delimiters-depth-2-face) fontified t) 847 859 (fontified t) 859 862 (face font-lock-constant-face fontified t) 862 884 (fontified t) 884 891 (face font-lock-string-face fontified t) 891 895 (fontified t) 895 896 (face (rainbow-delimiters-depth-2-face) fontified t) 896 899 (face font-lock-type-face fontified t) 899 900 (face (rainbow-delimiters-depth-2-face) fontified t) 900 909 (fontified t) 909 912 (face font-lock-constant-face fontified t) 912 920 (fontified t) 920 921 (face (rainbow-delimiters-depth-1-face) fontified t) 921 923 (fontified t) 923 928 (face font-lock-keyword-face fontified t) 928 929 (fontified t) 929 935 (face font-lock-type-face fontified t) 935 936 (face font-lock-type-face c-type c-decl-id-start fontified t) 936 937 (fontified t) 937 948 (face font-lock-variable-name-face fontified t) 948 949 (face (rainbow-delimiters-depth-1-face) fontified t) 949 952 (fontified t) 952 953 (face (rainbow-delimiters-depth-1-face) fontified t) 953 956 (fontified t) 956 957 (face (rainbow-delimiters-depth-1-face) fontified t) 957 1238 (fontified t) 1238 1262 (fontified t) 1262 2580 (fontified t) 2580 2581 (face (rainbow-delimiters-depth-1-face) fontified t) 2581 2584 (fontified t) 2584 2590 (face font-lock-type-face fontified t) 2590 2591 (face font-lock-type-face c-type c-decl-id-start fontified t) 2591 2592 (fontified t) 2592 2611 (face font-lock-function-name-face fontified t) 2611 2612 (face (rainbow-delimiters-depth-1-face) c-type c-decl-arg-start fontified t) 2612 2619 (face font-lock-type-face fontified t) 2619 2621 (fontified t) 2621 2625 (face font-lock-variable-name-face fontified t) 2625 2626 (c-type c-decl-arg-start fontified t) 2626 2627 (fontified t) 2627 2633 (face font-lock-type-face fontified t) 2633 2634 (fontified t) 2634 2637 (face font-lock-variable-name-face fontified t) 2637 2638 (face (rainbow-delimiters-depth-1-face) fontified t) 2638 2639 (fontified t) 2639 2640 (face (rainbow-delimiters-depth-1-face) fontified t) 2640 2643 (fontified t) 2643 2649 (face font-lock-type-face fontified t) 2649 2650 (face font-lock-type-face c-type c-decl-id-start fontified t) 2650 2651 (fontified t) 2651 2654 (face font-lock-variable-name-face fontified t) 2654 2662 (fontified t) 2662 2663 (c-is-sws t c-in-sws t fontified t) 2663 2664 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 2664 2666 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2666 2677 (c-in-sws t face font-lock-comment-face fontified t) 2677 2679 (c-in-sws t c-is-sws t fontified t) 2679 2680 (c-is-sws t face font-lock-keyword-face fontified t) 2680 2682 (face font-lock-keyword-face fontified t) 2682 2683 (fontified t) 2683 2684 (face (rainbow-delimiters-depth-2-face) fontified t) 2684 2689 (face font-lock-type-face fontified t) 2689 2690 (face font-lock-type-face c-type c-decl-id-start fontified t) 2690 2691 (fontified t) 2691 2692 (face font-lock-variable-name-face fontified t) 2692 2710 (fontified t) 2710 2711 (face (rainbow-delimiters-depth-2-face) fontified t) 2711 2712 (fontified t) 2712 2713 (face (rainbow-delimiters-depth-2-face) fontified t) 2713 2735 (fontified t) 2735 2736 (face (rainbow-delimiters-depth-3-face) fontified t) 2736 2740 (fontified t) 2740 2741 (face (rainbow-delimiters-depth-4-face) fontified t) 2741 2742 (fontified t) 2742 2743 (face (rainbow-delimiters-depth-4-face) fontified t) 2743 2749 (fontified t) 2749 2750 (face (rainbow-delimiters-depth-3-face) fontified t) 2750 2754 (fontified t) 2754 2755 (face (rainbow-delimiters-depth-2-face) fontified t) 2755 2758 (fontified t) 2758 2762 (face font-lock-keyword-face fontified t) 2762 2764 (face font-lock-keyword-face fontified t) 2764 2770 (fontified t) 2770 2771 (face (rainbow-delimiters-depth-1-face) fontified t) 2771 2773 (fontified t) 2773 2777 (face font-lock-keyword-face fontified t) 2777 2778 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 2778 2779 (fontified t) 2779 2791 (face font-lock-type-face fontified t) 2791 2792 (fontified t) 2792 2793 (face (rainbow-delimiters-depth-1-face) fontified t) 2793 2794 (fontified t) 2794 2800 (face font-lock-keyword-face fontified t) 2800 2801 (c-type c-decl-end fontified t) 2801 2804 (fontified t) 2804 2820 (face font-lock-type-face fontified t) 2820 2821 (face font-lock-type-face c-type c-decl-id-start fontified t) 2821 2822 (fontified t) 2822 2830 (face font-lock-variable-name-face fontified t) 2830 2834 (fontified t) 2834 2840 (face font-lock-type-face fontified t) 2840 2841 (face font-lock-type-face c-type c-decl-id-start fontified t) 2841 2842 (fontified t) 2842 2859 (face font-lock-variable-name-face fontified t) 2859 2864 (fontified t) 2864 2866 (face font-lock-type-face fontified t) 2866 2867 (face font-lock-type-face c-type c-decl-id-start fontified t) 2867 2868 (fontified t) 2868 2884 (face font-lock-variable-name-face fontified t) 2884 2889 (fontified t) 2889 2891 (face font-lock-type-face fontified t) 2891 2892 (face font-lock-type-face c-type c-decl-id-start fontified t) 2892 2893 (fontified t) 2893 2909 (face font-lock-function-name-face fontified t) 2909 2910 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2910 2914 (face font-lock-type-face fontified t) 2914 2916 (fontified t) 2916 2924 (face font-lock-variable-name-face fontified t) 2924 2925 (face (rainbow-delimiters-depth-2-face) fontified t) 2925 2926 (fontified t) 2926 2927 (face (rainbow-delimiters-depth-2-face) fontified t) 2927 2932 (fontified t) 2932 2934 (face font-lock-type-face fontified t) 2934 2935 (face font-lock-type-face c-type c-decl-id-start fontified t) 2935 2936 (fontified t) 2936 2938 (face font-lock-variable-name-face fontified t) 2938 2945 (fontified t) 2945 2946 (face (rainbow-delimiters-depth-3-face) c-type c-decl-arg-start fontified t) 2946 2954 (fontified t) 2954 2955 (c-type c-decl-arg-start fontified t) 2955 2982 (fontified t) 2982 2983 (face (rainbow-delimiters-depth-3-face) fontified t) 2983 2990 (fontified t) 2990 2992 (face font-lock-keyword-face fontified t) 2992 2993 (fontified t) 2993 2994 (face (rainbow-delimiters-depth-3-face) fontified t) 2994 3000 (fontified t) 3000 3001 (face (rainbow-delimiters-depth-3-face) fontified t) 3001 3002 (fontified t) 3002 3003 (face (rainbow-delimiters-depth-3-face) fontified t) 3003 3010 (fontified t) 3010 3013 (face font-lock-constant-face fontified t) 3013 3023 (fontified t) 3023 3032 (face font-lock-string-face fontified t) 3032 3052 (fontified t) 3052 3068 (face font-lock-string-face fontified t) 3068 3084 (fontified t) 3084 3087 (face font-lock-constant-face fontified t) 3087 3106 (fontified t) 3106 3107 (face (rainbow-delimiters-depth-4-face) fontified t) 3107 3108 (fontified t) 3108 3109 (face (rainbow-delimiters-depth-4-face) fontified t) 3109 3115 (fontified t) 3115 3116 (face (rainbow-delimiters-depth-3-face) fontified t) 3116 3122 (fontified t) 3122 3128 (face font-lock-keyword-face fontified t) 3128 3135 (fontified t) 3135 3136 (face (rainbow-delimiters-depth-2-face) fontified t) 3136 3138 (fontified t) 3138 3140 (c-is-sws t c-in-sws t fontified t) 3140 3141 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3141 3143 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3143 3181 (c-in-sws t face font-lock-comment-face fontified t) 3181 3183 (c-in-sws t c-is-sws t fontified t) 3183 3184 (face font-lock-type-face c-is-sws t fontified t) 3184 3186 (face font-lock-type-face fontified t) 3186 3187 (face font-lock-type-face c-type c-decl-id-start fontified t) 3187 3188 (fontified t) 3188 3207 (face font-lock-function-name-face fontified t) 3207 3208 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 3208 3211 (face font-lock-type-face fontified t) 3211 3212 (fontified t) 3212 3214 (face font-lock-variable-name-face fontified t) 3214 3215 (c-type c-decl-arg-start fontified t) 3215 3216 (fontified t) 3216 3219 (face font-lock-type-face fontified t) 3219 3220 (fontified t) 3220 3225 (face font-lock-variable-name-face fontified t) 3225 3226 (face (rainbow-delimiters-depth-2-face) fontified t) 3226 3227 (fontified t) 3227 3228 (face (rainbow-delimiters-depth-2-face) fontified t) 3228 3233 (fontified t) 3233 3239 (face font-lock-keyword-face fontified t) 3239 3240 (fontified t) 3240 3246 (face font-lock-type-face fontified t) 3246 3247 (face font-lock-type-face c-type c-decl-id-start fontified t) 3247 3248 (fontified t) 3248 3251 (face font-lock-variable-name-face fontified t) 3251 3257 (fontified t) 3257 3259 (face font-lock-keyword-face fontified t) 3259 3260 (fontified t) 3260 3261 (face (rainbow-delimiters-depth-3-face) fontified t) 3261 3270 (fontified t) 3270 3271 (face (rainbow-delimiters-depth-4-face) c-type c-decl-arg-start fontified t) 3271 3279 (fontified t) 3279 3280 (face (rainbow-delimiters-depth-4-face) fontified t) 3280 3285 (fontified t) 3285 3286 (face (rainbow-delimiters-depth-3-face) fontified t) 3286 3287 (fontified t) 3287 3288 (face (rainbow-delimiters-depth-3-face) fontified t) 3288 3295 (fontified t) 3295 3298 (face font-lock-constant-face fontified t) 3298 3308 (fontified t) 3308 3332 (face font-lock-string-face fontified t) 3332 3344 (fontified t) 3344 3345 (face (rainbow-delimiters-depth-4-face) c-type c-decl-arg-start fontified t) 3345 3350 (fontified t) 3350 3351 (face (rainbow-delimiters-depth-4-face) fontified t) 3351 3355 (fontified t) 3355 3358 (face font-lock-constant-face fontified t) 3358 3372 (fontified t) 3372 3378 (face font-lock-keyword-face fontified t) 3378 3379 (fontified t) 3379 3384 (face font-lock-constant-face fontified t) 3384 3390 (fontified t) 3390 3391 (face (rainbow-delimiters-depth-3-face) fontified t) 3391 3408 (fontified t) 3408 3409 (face (rainbow-delimiters-depth-3-face) fontified t) 3409 3413 (fontified t) 3413 3414 (c-type c-decl-arg-start fontified t) 3414 3420 (fontified t) 3420 3421 (face (rainbow-delimiters-depth-3-face) fontified t) 3421 3438 (fontified t) 3438 3439 (face (rainbow-delimiters-depth-3-face) fontified t) 3439 3443 (fontified t) 3443 3444 (c-type c-decl-arg-start fontified t) 3444 3450 (fontified t) 3450 3451 (face (rainbow-delimiters-depth-3-face) fontified t) 3451 3472 (fontified t) 3472 3473 (face (rainbow-delimiters-depth-3-face) c-type c-decl-arg-start fontified t) 3473 3493 (fontified t) 3493 3494 (face (rainbow-delimiters-depth-3-face) fontified t) 3494 3501 (fontified t) 3501 3502 (c-is-sws t c-in-sws t fontified t) 3502 3503 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3503 3505 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3505 3522 (c-in-sws t face font-lock-comment-face fontified t) 3522 3526 (c-in-sws t c-is-sws t fontified t) 3526 3527 (c-is-sws t fontified t) 3527 3549 (fontified t) 3549 3570 (c-is-sws t c-in-sws t fontified t) 3570 3571 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3571 3573 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3573 3598 (c-in-sws t face font-lock-comment-face fontified t) 3598 3602 (c-in-sws t c-is-sws t fontified t) 3602 3603 (c-is-sws t fontified t) 3603 3618 (fontified t) 3618 3623 (c-is-sws t c-in-sws t fontified t) 3623 3624 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3624 3626 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3626 3658 (c-in-sws t face font-lock-comment-face fontified t) 3658 3683 (c-in-sws t fontified t) 3683 3686 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3686 3707 (c-in-sws t face font-lock-comment-face fontified t) 3707 3711 (c-in-sws t c-is-sws t fontified t) 3711 3712 (c-is-sws t fontified t) 3712 3727 (fontified t) 3727 3732 (c-is-sws t c-in-sws t fontified t) 3732 3733 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3733 3735 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3735 3759 (c-in-sws t face font-lock-comment-face fontified t) 3759 3763 (c-in-sws t c-is-sws t fontified t) 3763 3764 (c-is-sws t fontified t) 3764 3771 (fontified t) 3771 3772 (face (rainbow-delimiters-depth-3-face) fontified t) 3772 3776 (fontified t) 3776 3777 (face (rainbow-delimiters-depth-3-face) fontified t) 3777 3782 (fontified t) 3782 3784 (c-is-sws t c-in-sws t fontified t) 3784 3785 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3785 3787 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3787 3797 (c-in-sws t face font-lock-comment-face fontified t) 3797 3798 (c-in-sws t face font-lock-comment-face fontified t) 3798 3806 (c-in-sws t face font-lock-comment-face fontified t) 3806 3810 (c-in-sws t c-is-sws t fontified t) 3810 3811 (c-is-sws t fontified t) 3811 3818 (fontified t) 3818 3819 (face (rainbow-delimiters-depth-3-face) fontified t) 3819 3824 (fontified t) 3824 3825 (face (rainbow-delimiters-depth-3-face) fontified t) 3825 3830 (fontified t) 3830 3831 (c-is-sws t c-in-sws t fontified t) 3831 3832 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3832 3834 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3834 3859 (c-in-sws t face font-lock-comment-face fontified t) 3859 3860 (c-in-sws t fontified t) 3860 3864 (c-in-sws t c-is-sws t fontified t) 3864 3865 (c-is-sws t fontified t) 3865 3880 (fontified t) 3880 3881 (face (rainbow-delimiters-depth-3-face) c-type c-decl-arg-start fontified t) 3881 3901 (fontified t) 3901 3902 (face (rainbow-delimiters-depth-3-face) fontified t) 3902 3903 (fontified t) 3903 3904 (c-is-sws t c-in-sws t fontified t) 3904 3905 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3905 3907 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3907 3930 (c-in-sws t face font-lock-comment-face fontified t) 3930 3931 (c-in-sws t fontified t) 3931 3935 (c-in-sws t c-is-sws t fontified t) 3935 3936 (c-is-sws t fontified t) 3936 3950 (fontified t) 3950 3951 (face (rainbow-delimiters-depth-3-face) c-type c-decl-arg-start fontified t) 3951 3965 (fontified t) 3965 3966 (face (rainbow-delimiters-depth-3-face) fontified t) 3966 3967 (fontified t) 3967 3970 (c-is-sws t c-in-sws t fontified t) 3970 3971 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 3971 3973 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3973 3996 (c-in-sws t face font-lock-comment-face fontified t) 3996 4035 (c-in-sws t fontified t) 4035 4038 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4038 4053 (c-in-sws t face font-lock-comment-face fontified t) 4053 4057 (c-in-sws t c-is-sws t fontified t) 4057 4058 (c-is-sws t fontified t) 4058 4073 (fontified t) 4073 4074 (face (rainbow-delimiters-depth-3-face) c-type c-decl-arg-start fontified t) 4074 4089 (fontified t) 4089 4090 (face (rainbow-delimiters-depth-3-face) fontified t) 4090 4091 (fontified t) 4091 4092 (c-is-sws t c-in-sws t fontified t) 4092 4093 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4093 4095 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4095 4111 (c-in-sws t face font-lock-comment-face fontified t) 4111 4115 (c-in-sws t c-is-sws t fontified t) 4115 4116 (c-is-sws t fontified t) 4116 4173 (fontified t) 4173 4175 (face font-lock-keyword-face fontified t) 4175 4176 (fontified t) 4176 4177 (face (rainbow-delimiters-depth-3-face) fontified t) 4177 4186 (fontified t) 4186 4187 (face (rainbow-delimiters-depth-4-face) c-type c-decl-arg-start fontified t) 4187 4189 (fontified t) 4189 4190 (c-type c-decl-arg-start fontified t) 4190 4204 (fontified t) 4204 4205 (face (rainbow-delimiters-depth-4-face) fontified t) 4205 4210 (fontified t) 4210 4211 (face (rainbow-delimiters-depth-3-face) fontified t) 4211 4212 (fontified t) 4212 4213 (face (rainbow-delimiters-depth-3-face) fontified t) 4213 4220 (fontified t) 4220 4223 (face font-lock-constant-face fontified t) 4223 4233 (fontified t) 4233 4257 (face font-lock-string-face fontified t) 4257 4269 (fontified t) 4269 4270 (face (rainbow-delimiters-depth-4-face) fontified t) 4270 4271 (fontified t) 4271 4275 (fontified t) 4275 4276 (face (rainbow-delimiters-depth-4-face) fontified t) 4276 4280 (fontified t) 4280 4283 (face font-lock-constant-face fontified t) 4283 4290 (fontified t) 4290 4297 (fontified t) 4297 4303 (face font-lock-keyword-face fontified t) 4303 4304 (fontified t) 4304 4309 (face font-lock-constant-face fontified t) 4309 4315 (fontified t) 4315 4316 (face (rainbow-delimiters-depth-3-face) fontified t) 4316 4321 (fontified t) 4321 4327 (face font-lock-keyword-face fontified t) 4327 4328 (fontified t) 4328 4332 (face font-lock-constant-face fontified t) 4332 4336 (fontified t) 4336 4337 (face (rainbow-delimiters-depth-2-face) fontified t) 4337 4339 (fontified t) 4339 4341 (c-is-sws t c-in-sws t fontified t) 4341 4342 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4342 4344 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4344 4387 (c-in-sws t face font-lock-comment-face fontified t) 4387 4389 (c-in-sws t c-is-sws t fontified t) 4389 4390 (face font-lock-type-face c-is-sws t fontified t) 4390 4391 (face font-lock-type-face fontified t) 4391 4392 (face font-lock-type-face c-type c-decl-id-start fontified t) 4392 4393 (fontified t) 4393 4411 (face font-lock-function-name-face fontified t) 4411 4412 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 4412 4415 (face font-lock-type-face fontified t) 4415 4416 (fontified t) 4416 4418 (face font-lock-variable-name-face fontified t) 4418 4419 (c-type c-decl-arg-start fontified t) 4419 4420 (fontified t) 4420 4424 (face font-lock-type-face fontified t) 4424 4426 (fontified t) 4426 4432 (face font-lock-variable-name-face fontified t) 4432 4433 (c-type c-decl-arg-start fontified t) 4433 4434 (fontified t) 4434 4440 (face font-lock-type-face fontified t) 4440 4441 (fontified t) 4441 4445 (face font-lock-variable-name-face fontified t) 4445 4446 (face (rainbow-delimiters-depth-2-face) fontified t) 4446 4447 (fontified t) 4447 4448 (face (rainbow-delimiters-depth-2-face) fontified t) 4448 4453 (fontified t) 4453 4459 (face font-lock-keyword-face fontified t) 4459 4464 (fontified t) 4464 4465 (face (rainbow-delimiters-depth-3-face) fontified t) 4465 4481 (fontified t) 4481 4482 (face (rainbow-delimiters-depth-3-face) fontified t) 4482 4486 (fontified t) 4486 4487 (face (rainbow-delimiters-depth-2-face) fontified t) 4487 4489 (fontified t) 4489 4491 (c-is-sws t c-in-sws t fontified t) 4491 4492 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4492 4494 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4494 4536 (c-in-sws t face font-lock-comment-face fontified t) 4536 4538 (c-in-sws t c-is-sws t fontified t) 4538 4539 (face font-lock-type-face c-is-sws t fontified t) 4539 4540 (face font-lock-type-face fontified t) 4540 4541 (face font-lock-type-face c-type c-decl-id-start fontified t) 4541 4542 (fontified t) 4542 4559 (face font-lock-function-name-face fontified t) 4559 4560 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 4560 4563 (face font-lock-type-face fontified t) 4563 4564 (fontified t) 4564 4566 (face font-lock-variable-name-face fontified t) 4566 4567 (c-type c-decl-arg-start fontified t) 4567 4568 (fontified t) 4568 4573 (face font-lock-keyword-face fontified t) 4573 4574 (fontified t) 4574 4578 (face font-lock-type-face fontified t) 4578 4580 (fontified t) 4580 4586 (face font-lock-variable-name-face fontified t) 4586 4587 (c-type c-decl-arg-start fontified t) 4587 4588 (fontified t) 4588 4594 (face font-lock-type-face fontified t) 4594 4595 (fontified t) 4595 4599 (face font-lock-variable-name-face fontified t) 4599 4600 (face (rainbow-delimiters-depth-2-face) fontified t) 4600 4601 (fontified t) 4601 4602 (face (rainbow-delimiters-depth-2-face) fontified t) 4602 4607 (fontified t) 4607 4613 (face font-lock-keyword-face fontified t) 4613 4619 (fontified t) 4619 4620 (face (rainbow-delimiters-depth-3-face) fontified t) 4620 4636 (fontified t) 4636 4637 (face (rainbow-delimiters-depth-3-face) fontified t) 4637 4641 (fontified t) 4641 4642 (face (rainbow-delimiters-depth-2-face) fontified t) 4642 4644 (fontified t) 4644 4646 (c-is-sws t c-in-sws t fontified t) 4646 4647 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4647 4649 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4649 4683 (c-in-sws t face font-lock-comment-face fontified t) 4683 4685 (c-in-sws t c-is-sws t fontified t) 4685 4686 (face font-lock-type-face c-is-sws t fontified t) 4686 4688 (face font-lock-type-face fontified t) 4688 4689 (face font-lock-type-face c-type c-decl-id-start fontified t) 4689 4690 (fontified t) 4690 4705 (face font-lock-function-name-face fontified t) 4705 4706 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 4706 4709 (face font-lock-type-face fontified t) 4709 4710 (fontified t) 4710 4712 (face font-lock-variable-name-face fontified t) 4712 4713 (face (rainbow-delimiters-depth-2-face) fontified t) 4713 4714 (fontified t) 4714 4715 (face (rainbow-delimiters-depth-2-face) fontified t) 4715 4721 (fontified t) 4721 4722 (face (rainbow-delimiters-depth-3-face) fontified t) 4722 4724 (fontified t) 4724 4725 (face (rainbow-delimiters-depth-3-face) fontified t) 4725 4727 (fontified t) 4727 4728 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t) 4728 4732 (fontified t) 4732 4744 (face font-lock-function-name-face fontified t) 4744 4745 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 4745 4749 (face font-lock-type-face fontified t) 4749 4751 (fontified t) 4751 4764 (face font-lock-variable-name-face fontified t) 4764 4765 (face (rainbow-delimiters-depth-2-face) fontified t) 4765 4766 (fontified t) 4766 4767 (face (rainbow-delimiters-depth-2-face) fontified t) 4767 4807 (fontified t) 4807 4808 (face (rainbow-delimiters-depth-3-face) fontified t) 4808 4821 (fontified t) 4821 4822 (face (rainbow-delimiters-depth-3-face) fontified t) 4822 4829 (fontified t) 4829 4831 (face font-lock-keyword-face fontified t) 4831 4832 (fontified t) 4832 4833 (face (rainbow-delimiters-depth-3-face) fontified t) 4833 4834 (face font-lock-negation-char-face fontified t) 4834 4853 (fontified t) 4853 4854 (face (rainbow-delimiters-depth-4-face) fontified t) 4854 4878 (fontified t) 4878 4879 (face (rainbow-delimiters-depth-4-face) fontified t) 4879 4880 (face (rainbow-delimiters-depth-3-face) fontified t) 4880 4881 (fontified t) 4881 4882 (face (rainbow-delimiters-depth-3-face) fontified t) 4882 4883 (c-is-sws t c-in-sws t fontified t) 4883 4884 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4884 4886 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4886 4900 (c-in-sws t face font-lock-comment-face fontified t) 4900 4906 (c-in-sws t c-is-sws t fontified t) 4906 4907 (c-is-sws t fontified t) 4907 4910 (fontified t) 4910 4911 (face (rainbow-delimiters-depth-4-face) fontified t) 4911 4912 (fontified t) 4912 4913 (face (rainbow-delimiters-depth-4-face) fontified t) 4913 4919 (fontified t) 4919 4920 (face (rainbow-delimiters-depth-3-face) fontified t) 4920 4923 (fontified t) 4923 4924 (face (rainbow-delimiters-depth-2-face) fontified t) 4924 4928 (fontified t) 4928 4931 (face font-lock-type-face fontified t) 4931 4932 (face font-lock-type-face c-type c-decl-id-start fontified t) 4932 4933 (fontified t) 4933 4944 (face font-lock-function-name-face fontified t) 4944 4945 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 4945 4962 (face font-lock-type-face fontified t) 4962 4963 (fontified t) 4963 4967 (face font-lock-variable-name-face fontified t) 4967 4968 (face (rainbow-delimiters-depth-2-face) fontified t) 4968 4969 (fontified t) 4969 4970 (face (rainbow-delimiters-depth-2-face) fontified t) 4970 4972 (fontified t) 4972 4976 (c-is-sws t c-in-sws t fontified t) 4976 4977 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 4977 4979 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4979 4999 (c-in-sws t face font-lock-comment-face fontified t) 4999 5003 (c-in-sws t c-is-sws t fontified t) 5003 5004 (c-is-sws t fontified t) 5004 5067 (fontified t) 5067 5073 (face font-lock-type-face fontified t) 5073 5074 (face font-lock-type-face c-type c-decl-id-start fontified t) 5074 5075 (fontified t) 5075 5078 (face font-lock-variable-name-face fontified t) 5078 5100 (fontified t) 5100 5101 (face (rainbow-delimiters-depth-3-face) fontified t) 5101 5102 (face (rainbow-delimiters-depth-4-face) fontified t) 5102 5109 (face font-lock-type-face fontified t) 5109 5110 (fontified t) 5110 5111 (face (rainbow-delimiters-depth-4-face) fontified t) 5111 5119 (fontified t) 5119 5125 (face font-lock-keyword-face fontified t) 5125 5126 (face (rainbow-delimiters-depth-4-face) fontified t) 5126 5130 (fontified t) 5130 5131 (face (rainbow-delimiters-depth-4-face) fontified t) 5131 5134 (fontified t) 5134 5140 (face font-lock-keyword-face fontified t) 5140 5141 (face (rainbow-delimiters-depth-4-face) fontified t) 5141 5149 (fontified t) 5149 5150 (face (rainbow-delimiters-depth-4-face) fontified t) 5150 5151 (face (rainbow-delimiters-depth-3-face) fontified t) 5151 5204 (fontified t) 5204 5205 (face (rainbow-delimiters-depth-3-face) fontified t) 5205 5223 (fontified t) 5223 5224 (face (rainbow-delimiters-depth-4-face) fontified t) 5224 5228 (face font-lock-type-face fontified t) 5228 5230 (fontified t) 5230 5231 (face (rainbow-delimiters-depth-4-face) fontified t) 5231 5238 (fontified t) 5238 5244 (face font-lock-keyword-face fontified t) 5244 5245 (face (rainbow-delimiters-depth-4-face) fontified t) 5245 5249 (fontified t) 5249 5250 (face (rainbow-delimiters-depth-4-face) fontified t) 5250 5251 (face (rainbow-delimiters-depth-3-face) fontified t) 5251 5257 (fontified t) 5257 5263 (face font-lock-keyword-face fontified t) 5263 5264 (fontified t) 5264 5268 (face font-lock-constant-face fontified t) 5268 5272 (fontified t) 5272 5273 (face (rainbow-delimiters-depth-2-face) fontified t) 5273 5277 (fontified t) 5277 5293 (face font-lock-type-face fontified t) 5293 5294 (face font-lock-type-face c-type c-decl-id-start fontified t) 5294 5295 (fontified t) 5295 5303 (face font-lock-function-name-face fontified t) 5303 5304 (face (rainbow-delimiters-depth-2-face) fontified t) 5304 5305 (face (rainbow-delimiters-depth-2-face) fontified t) 5305 5306 (fontified t) 5306 5307 (face (rainbow-delimiters-depth-2-face) fontified t) 5307 5313 (fontified t) 5313 5329 (face font-lock-type-face fontified t) 5329 5330 (face font-lock-type-face c-type c-decl-id-start fontified t) 5330 5331 (fontified t) 5331 5337 (face font-lock-variable-name-face fontified t) 5337 5340 (fontified t) 5340 5346 (c-is-sws t c-in-sws t fontified t) 5346 5347 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 5347 5349 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5349 5376 (c-in-sws t face font-lock-comment-face fontified t) 5376 5383 (c-in-sws t fontified t) 5383 5389 (c-in-sws t c-is-sws t fontified t) 5389 5390 (c-is-sws t fontified t) 5390 5395 (fontified t) 5395 5396 (face (rainbow-delimiters-depth-3-face) fontified t) 5396 5408 (fontified t) 5408 5414 (face font-lock-keyword-face fontified t) 5414 5415 (face (rainbow-delimiters-depth-4-face) fontified t) 5415 5421 (fontified t) 5421 5422 (face (rainbow-delimiters-depth-4-face) fontified t) 5422 5423 (face (rainbow-delimiters-depth-3-face) fontified t) 5423 5467 (fontified t) 5467 5472 (face font-lock-keyword-face fontified t) 5472 5473 (fontified t) 5473 5474 (face (rainbow-delimiters-depth-3-face) fontified t) 5474 5505 (fontified t) 5505 5506 (face (rainbow-delimiters-depth-3-face) fontified t) 5506 5507 (fontified t) 5507 5508 (face (rainbow-delimiters-depth-3-face) fontified t) 5508 5535 (fontified t) 5535 5536 (face (rainbow-delimiters-depth-4-face) fontified t) 5536 5554 (fontified t) 5554 5555 (face (rainbow-delimiters-depth-5-face) fontified t) 5555 5559 (face font-lock-type-face fontified t) 5559 5561 (fontified t) 5561 5562 (face (rainbow-delimiters-depth-5-face) fontified t) 5562 5609 (fontified t) 5609 5615 (face font-lock-keyword-face fontified t) 5615 5616 (face (rainbow-delimiters-depth-5-face) fontified t) 5616 5633 (fontified t) 5633 5634 (face (rainbow-delimiters-depth-5-face) fontified t) 5634 5635 (face (rainbow-delimiters-depth-4-face) fontified t) 5635 5643 (fontified t) 5643 5644 (face (rainbow-delimiters-depth-3-face) fontified t) 5644 5700 (fontified t) 5700 5701 (c-is-sws t c-in-sws t fontified t) 5701 5702 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 5702 5704 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 5704 5750 (face font-lock-comment-face c-in-sws t fontified t) 5750 5779 (c-in-sws t fontified t) 5779 5780 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5780 5782 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5782 5790 (c-in-sws t face font-lock-comment-face fontified t) 5790 5802 (c-in-sws t face font-lock-comment-face fontified t) 5802 5803 (c-in-sws t face font-lock-comment-face fontified t) 5803 5804 (c-is-sws t fontified t) 5804 5811 (c-is-sws t fontified t) 5811 5828 (fontified t) 5828 5829 (face (rainbow-delimiters-depth-3-face) fontified t) 5829 5847 (fontified t) 5847 5848 (face (rainbow-delimiters-depth-4-face) fontified t) 5848 5852 (face font-lock-type-face fontified t) 5852 5854 (fontified t) 5854 5855 (face (rainbow-delimiters-depth-4-face) fontified t) 5855 5891 (fontified t) 5891 5897 (face font-lock-keyword-face fontified t) 5897 5898 (face (rainbow-delimiters-depth-4-face) fontified t) 5898 5904 (fontified t) 5904 5905 (face (rainbow-delimiters-depth-4-face) fontified t) 5905 5908 (fontified t) 5908 5914 (face font-lock-keyword-face fontified t) 5914 5915 (face (rainbow-delimiters-depth-4-face) fontified t) 5915 5932 (fontified t) 5932 5933 (face (rainbow-delimiters-depth-4-face) fontified t) 5933 5934 (face (rainbow-delimiters-depth-3-face) fontified t) 5934 5943 (fontified t) 5943 5946 (face font-lock-comment-delimiter-face fontified t) 5946 5995 (face font-lock-comment-face fontified t) 5995 6002 (fontified t) 6002 6004 (face font-lock-keyword-face fontified t) 6004 6005 (fontified t) 6005 6006 (face (rainbow-delimiters-depth-3-face) fontified t) 6006 6033 (fontified t) 6033 6034 (face (rainbow-delimiters-depth-3-face) fontified t) 6034 6035 (fontified t) 6035 6036 (face (rainbow-delimiters-depth-3-face) fontified t) 6036 6045 (fontified t) 6045 6047 (face font-lock-keyword-face fontified t) 6047 6048 (fontified t) 6048 6049 (face (rainbow-delimiters-depth-4-face) fontified t) 6049 6068 (fontified t) 6068 6069 (face (rainbow-delimiters-depth-5-face) fontified t) 6069 6070 (face (rainbow-delimiters-depth-6-face) fontified t) 6070 6077 (face font-lock-type-face fontified t) 6077 6079 (fontified t) 6079 6080 (face (rainbow-delimiters-depth-6-face) fontified t) 6080 6121 (fontified t) 6121 6127 (face font-lock-keyword-face fontified t) 6127 6128 (face (rainbow-delimiters-depth-6-face) fontified t) 6128 6134 (fontified t) 6134 6135 (face (rainbow-delimiters-depth-6-face) fontified t) 6135 6138 (fontified t) 6138 6144 (face font-lock-keyword-face fontified t) 6144 6145 (face (rainbow-delimiters-depth-6-face) fontified t) 6145 6155 (fontified t) 6155 6156 (face (rainbow-delimiters-depth-6-face) fontified t) 6156 6157 (face (rainbow-delimiters-depth-5-face) fontified t) 6157 6183 (fontified t) 6183 6184 (face (rainbow-delimiters-depth-4-face) fontified t) 6184 6185 (fontified t) 6185 6186 (face (rainbow-delimiters-depth-4-face) fontified t) 6186 6190 (fontified t) 6190 6198 (face font-lock-comment-delimiter-face fontified t) 6198 6205 (face font-lock-comment-face fontified t) 6205 6213 (fontified t) 6213 6214 (face (rainbow-delimiters-depth-4-face) fontified t) 6214 6215 (fontified t) 6215 6219 (face font-lock-keyword-face fontified t) 6219 6220 (fontified t) 6220 6221 (face (rainbow-delimiters-depth-4-face) fontified t) 6221 6225 (fontified t) 6225 6230 (face font-lock-keyword-face fontified t) 6230 6236 (fontified t) 6236 6237 (face (rainbow-delimiters-depth-4-face) fontified t) 6237 6244 (fontified t) 6244 6245 (face (rainbow-delimiters-depth-3-face) fontified t) 6245 6250 (fontified t) 6250 6256 (face font-lock-keyword-face fontified t) 6256 6267 (fontified t) 6267 6268 (face (rainbow-delimiters-depth-2-face) fontified t) 6268 6270 (fontified t) 6270 6277 (face font-lock-keyword-face fontified t) 6277 6278 (c-type c-decl-end fontified t) 6278 6279 (fontified t) 6279 6280 (face (rainbow-delimiters-depth-1-face) fontified t)) . 263) (undo-tree-id29 . -21) (undo-tree-id30 . -6279) (undo-tree-id31 . -5995) (undo-tree-id32 . -6279) (undo-tree-id33 . -6279) (undo-tree-id34 . -6279) 6542) nil (26361 5989 13859 971000) 0 nil])
([nil nil ((#("
#define START_BYTE 0xAA
#define END_BYTE 0xBB

;

" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 2 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 19 (c-in-sws t face font-lock-variable-name-face fontified t) 19 25 (c-in-sws t fontified t) 25 26 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 26 32 (c-in-sws t face font-lock-preprocessor-face fontified t) 32 33 (c-in-sws t fontified t) 33 41 (c-in-sws t face font-lock-variable-name-face fontified t) 41 47 (c-in-sws t fontified t) 47 48 (c-in-sws t c-is-sws t fontified t) 48 49 (c-is-sws t fontified t) 49 50 (fontified t) 50 51 (fontified t)) . 215) (undo-tree-id24 . -48) (undo-tree-id25 . -48) (undo-tree-id26 . -50) (undo-tree-id27 . -50) (undo-tree-id28 . -50)) nil (26361 5989 13857 127000) 0 nil])
([nil nil ((#("#include <cinttypes>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <errno.h>
#include <fcntl.h>
#include <iostream>
#include <string>
#include <termios.h>
#include <unistd.h>
" 0 1 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (c-in-sws t fontified t) 9 10 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 10 19 (c-in-sws t face font-lock-string-face fontified t) 19 20 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 20 21 (c-in-sws t fontified t) 21 22 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 22 29 (c-in-sws t face font-lock-preprocessor-face fontified t) 29 30 (c-in-sws t fontified t) 30 31 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 31 38 (c-in-sws t face font-lock-string-face fontified t) 38 39 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 39 40 (c-in-sws t fontified t) 40 41 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 41 48 (c-in-sws t face font-lock-preprocessor-face fontified t) 48 49 (c-in-sws t fontified t) 49 50 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 50 57 (c-in-sws t face font-lock-string-face fontified t) 57 58 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 58 59 (c-in-sws t fontified t) 59 60 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 60 67 (c-in-sws t face font-lock-preprocessor-face fontified t) 67 68 (c-in-sws t fontified t) 68 69 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 69 76 (c-in-sws t face font-lock-string-face fontified t) 76 77 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 77 78 (c-in-sws t fontified t) 78 79 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 79 86 (c-in-sws t face font-lock-preprocessor-face fontified t) 86 87 (c-in-sws t fontified t) 87 88 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 88 95 (c-in-sws t face font-lock-string-face fontified t) 95 96 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 96 97 (c-in-sws t fontified t) 97 98 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 98 105 (c-in-sws t face font-lock-preprocessor-face fontified t) 105 106 (c-in-sws t fontified t) 106 107 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 107 114 (c-in-sws t face font-lock-string-face fontified t) 114 115 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 115 116 (c-in-sws t fontified t) 116 117 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 117 124 (c-in-sws t face font-lock-preprocessor-face fontified t) 124 125 (c-in-sws t fontified t) 125 126 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 126 133 (c-in-sws t face font-lock-string-face fontified t) 133 134 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 134 135 (c-in-sws t fontified t) 135 136 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 136 143 (c-in-sws t face font-lock-preprocessor-face fontified t) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 145 153 (c-in-sws t face font-lock-string-face fontified t) 153 154 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 154 155 (c-in-sws t fontified t) 155 156 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 156 163 (c-in-sws t face font-lock-preprocessor-face fontified t) 163 164 (c-in-sws t fontified t) 164 165 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 165 171 (c-in-sws t face font-lock-string-face fontified t) 171 172 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 172 173 (c-in-sws t fontified t) 173 174 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 174 181 (c-in-sws t face font-lock-preprocessor-face fontified t) 181 182 (c-in-sws t fontified t) 182 183 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 183 192 (c-in-sws t face font-lock-string-face fontified t) 192 193 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 193 194 (c-in-sws t fontified t) 194 195 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 195 202 (c-in-sws t face font-lock-preprocessor-face fontified t) 202 203 (c-in-sws t fontified t) 203 204 (c-in-sws t category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 204 212 (c-in-sws t face font-lock-string-face fontified t) 212 213 (c-in-sws t category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 213 214 (c-in-sws t fontified t)) . 1) (undo-tree-id10 . -20) (undo-tree-id11 . -59) (undo-tree-id12 . -173) (undo-tree-id13 . -213) (undo-tree-id14 . -173) (undo-tree-id15 . -173) (undo-tree-id16 . -173) (undo-tree-id17 . -194) (undo-tree-id18 . -194) (undo-tree-id19 . -213) (undo-tree-id20 . -194) (undo-tree-id21 . -213) (undo-tree-id22 . -173) (undo-tree-id23 . -213) 214) nil (26361 5989 13854 136000) 0 nil])
([nil nil ((#("// int main() {

//   char *port = new char[50];
//   strcpy(port, \"/dev/ttyACM0\");

//   SerialBridge serial_bridge(port);

//   while (1) {
//     print_this(serial_bridge.get_data());
//   }

//   delete[] port;
//   return 0;
/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face c-is-sws t fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t fontified t) 17 18 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 18 22 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 22 49 (face font-lock-comment-face fontified t c-in-sws t) 49 54 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 54 84 (face font-lock-comment-face fontified t c-in-sws t) 84 85 (fontified t c-in-sws t) 85 90 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 90 124 (face font-lock-comment-face fontified t c-in-sws t) 124 125 (fontified t c-in-sws t) 125 130 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 130 142 (face font-lock-comment-face fontified t c-in-sws t) 142 149 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 149 187 (face font-lock-comment-face fontified t c-in-sws t) 187 192 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 192 194 (face font-lock-comment-face fontified t c-in-sws t) 194 195 (fontified t c-in-sws t) 195 200 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 200 215 (face font-lock-comment-face fontified t c-in-sws t) 215 220 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 220 230 (face font-lock-comment-face fontified t c-in-sws t) 230 231 (face font-lock-comment-delimiter-face fontified t c-is-sws t)) . 1) (undo-tree-id3 . -230) (undo-tree-id4 . -230) (undo-tree-id5 . -230) (undo-tree-id6 . -230) (undo-tree-id7 . -230) (undo-tree-id8 . 231) (undo-tree-id9 . -230) 231) nil (26361 5989 13848 970000) 0 nil])
([nil nil ((#("/ }" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-unmatched-face) fontified t)) . 1) (undo-tree-id0 . -2) (undo-tree-id1 . 3) (undo-tree-id2 . 3)) nil (26361 5989 13845 715000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5850 . 5851) (nil fontified nil 281 . 5851) (nil fontified nil 280 . 281) (nil fontified nil 259 . 280) (nil fontified nil 257 . 259) (nil fontified nil 236 . 257) (nil fontified nil 235 . 236) (nil fontified nil 212 . 235) (nil fontified nil 210 . 212) (nil fontified nil 193 . 210) (nil fontified nil 192 . 193) (nil fontified nil 175 . 192) (nil fontified nil 173 . 175) (nil fontified nil 154 . 173) (nil fontified nil 153 . 154) (nil fontified nil 136 . 153) (nil fontified nil 135 . 136) (nil fontified nil 93 . 135) (nil fontified nil 92 . 93) (nil fontified nil 59 . 92) (nil fontified nil 58 . 59) (nil fontified nil 40 . 58) (nil fontified nil 39 . 40) (nil fontified nil 21 . 39) (nil fontified nil 20 . 21) (nil fontified nil 2 . 20) (nil fontified nil 1 . 2) (1 . 5851)) nil (26361 5989 13791 962000) 0 nil])
([nil nil ((#("    " 0 4 (c-is-sws t fontified t)) . -5540) (undo-tree-id46 . -4) 5544 (5540 . 5544) (#("    " 0 4 (c-in-sws t c-is-sws t fontified nil)) . 5539) (undo-tree-id47 . -4) (5538 . 5544) (t 26361 5989 29131 523000)) nil (26361 10695 601893 311000) 0 nil])
([nil nil ((5550 . 5556) (5549 . 5555) (5548 . 5550) (5544 . 5548) (5540 . 5544)) nil (26361 10695 601892 40000) 0 nil])
([nil nil ((#("    Bridge.Write(DataBufferFromLib);
" 0 4 (fontified t c-in-sws t c-is-sws t) 4 5 (fontified t c-is-sws t) 5 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-3-face) fontified t) 17 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 36 (fontified t) 36 37 (fontified t)) . 5563) (undo-tree-id44 . -36) (undo-tree-id45 . -5) 5568) nil (26361 10695 601891 194000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5560 . 5561) (#("
" 0 1 (fontified nil)) . -5593) (5556 . 5594) 5550) nil (26361 10695 601889 262000) 0 nil])
([nil nil ((5557 . 5563) (#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . -5557) (undo-tree-id43 . -4) 5561) nil (26361 10695 601888 415000) 0 nil])
([nil nil ((#("catch" 0 5 (face font-lock-keyword-face fontified nil)) . 5607) (undo-tree-id40 . -5) (5602 . 5607) 5612 (5609 . 5612) (5608 . 5610) (5607 . 5608) (#("catch" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 5607) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (5602 . 5607) 5607 (5603 . 5607) (5601 . 5603)) nil (26361 10695 601887 24000) 0 nil])
([nil nil ((#("catch" 0 5 (face font-lock-keyword-face fontified nil)) . 5607) (undo-tree-id39 . -5) (5602 . 5607) 5622 (5616 . 5622) (5615 . 5621) (5614 . 5616) (5613 . 5614)) nil (26361 10695 601881 549000) 0 nil])
([nil nil ((5622 . 5630) (5616 . 5622) (#("     " 0 5 (fontified nil)) . -5616) (undo-tree-id38 . -5) (#(" " 0 1 (fontified t)) . 5621)) nil (26361 10695 601877 434000) 0 nil])
([nil nil ((5630 . 5631)) nil (26361 10695 601864 381000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t) 6 7 (fontified t)) . 5550) (undo-tree-id48 . -6) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -7) 5555 (t 26361 10695 642800 499000)) nil (26361 10699 103690 894000) 0 nil])
([nil nil ((1245 . 1247) (1237 . 1245) (1236 . 1237) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -1236) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -1237) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 1238 (1231 . 1238) (1227 . 1231) (#("v" 0 1 (fontified nil)) . 1227) (1227 . 1228) (#("void" 0 4 (fontified nil)) . -1227) (undo-tree-id404 . -4) (1227 . 1231) (#("voi" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1227) (undo-tree-id405 . -3) (undo-tree-id406 . -3) 1230 (1228 . 1230) (#("o" 0 1 (fontified t)) . -1228) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("i" 0 1 (fontified t)) . -1229) (undo-tree-id409 . -1) (undo-tree-id410 . -1) 1230 (1228 . 1230) (#("l" 0 1 (fontified t)) . -1228) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("i" 0 1 (fontified t)) . -1229) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 1230 (1227 . 1230) (1226 . 1226) (1226 . 1227) (#("v" 0 1 (fontified t)) . -1226) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 1227 (1226 . 1227) (#("
" 0 1 (fontified t)) . -1226) (undo-tree-id417 . -1) 1227 (1226 . 1226) (1226 . 1227) (1225 . 1225) (1225 . 1226) (t 26361 10699 143805 90000)) nil (26361 10784 827737 253000) 0 nil])
([nil nil ((1245 . 1259) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1245) (undo-tree-id399 . -1) 1246 (1245 . 1246) (#(")" 0 1 (face font-lock-function-name-face fontified nil)) . -1245) (1245 . 1246)) nil (26361 10784 827712 263000) 0 nil])
([nil nil ((1264 . 1266) (1263 . 1265) (1262 . 1264) (1261 . 1262)) nil (26361 10784 827711 260000) 0 nil])
([nil nil ((1277 . 1280) (nil fontified nil 1260 . 1277) (nil face (rainbow-delimiters-depth-1-face) 1260 . 1277) (1260 . 1277) (#("Co" 0 2 (fontified nil)) . 1260) (nil fontified nil 1260 . 1262) (nil face (rainbow-delimiters-depth-1-face) 1260 . 1262) (1260 . 1262) (#("CommunicationData" 0 17 (fontified nil)) . -1260) (undo-tree-id396 . -17) (nil fontified nil 1260 . 1277) (nil face (rainbow-delimiters-depth-1-face) 1260 . 1277) (1260 . 1277) (#("Com" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1260) (undo-tree-id397 . -3) (undo-tree-id398 . -3) 1263 (1260 . 1263)) nil (26361 10784 827710 271000) 0 nil])
([nil nil ((1279 . 1280)) nil (26361 10784 827684 479000) 0 nil])
([nil nil ((1312 . 1313) (1302 . 1312) (#("ST" 0 2 (fontified nil)) . 1302) (1302 . 1304) (#("START_BYTE" 0 10 (fontified nil)) . -1302) (undo-tree-id387 . -10) (1302 . 1312) (#("ST" 0 1 (fontified t) 1 2 (fontified t)) . -1302) (undo-tree-id388 . -2) (undo-tree-id389 . -2) 1304 (1302 . 1304) (1299 . 1302) (1289 . 1299) (#("start_byte" 0 10 (fontified nil)) . -1289) (undo-tree-id390 . -10) (1289 . 1299) (#("s" 0 1 (fontified t)) . -1289) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 1290 (1287 . 1290) (#("s" 0 1 (fontified t)) . -1287) (undo-tree-id393 . -1) (undo-tree-id394 . -1) 1288 (1287 . 1288) (1285 . 1287) (#(" " 0 1 (fontified nil)) . -1285) (undo-tree-id395 . -1) (#(" " 0 1 (fontified t)) . 1286)) nil (26361 10784 827680 903000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1341) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("." 0 1 (fontified t)) . -1342) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("c" 0 1 (fontified t)) . -1343) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("r" 0 1 (fontified t)) . -1344) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("c" 0 1 (fontified t)) . -1345) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -1346) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("=" 0 1 (fontified t)) . -1347) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#(" " 0 1 (fontified t)) . -1348) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("g" 0 1 (fontified t)) . -1349) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("e" 0 1 (fontified t)) . -1350) (undo-tree-id372 . -1) (undo-tree-id373 . -1) 1351 (1350 . 1351) (1346 . 1350) (1343 . 1346) (#("crc" 0 3 (fontified nil)) . -1343) (undo-tree-id374 . -3) (1343 . 1346) (#("cr" 0 1 (fontified t) 1 2 (fontified t)) . -1343) (undo-tree-id375 . -2) (undo-tree-id376 . -2) 1345 (1341 . 1345) (1338 . 1341) (1337 . 1338) (1329 . 1337) (#("E" 0 1 (fontified nil)) . 1329) (1329 . 1330) (#("END_BYTE" 0 8 (fontified nil)) . -1329) (undo-tree-id377 . -8) (1329 . 1337) (#("E" 0 1 (fontified t)) . -1329) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 1330 (1327 . 1330) (#("-" 0 1 (fontified t)) . -1327) (undo-tree-id380 . -1) 1328 (1326 . 1328) (#("=" 0 1 (fontified t)) . -1326) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . -1327) (undo-tree-id382 . -1) 1328 (1326 . 1328) (#(" " 0 1 (fontified t)) . -1326) (undo-tree-id383 . -1) 1327 (1326 . 1327) (1318 . 1326) (#("end_byte" 0 8 (fontified nil)) . -1318) (undo-tree-id384 . -8) (1318 . 1326) (#("en" 0 1 (fontified t) 1 2 (fontified t)) . -1318) (undo-tree-id385 . -2) (undo-tree-id386 . -2) 1320 (1316 . 1320) (1313 . 1316)) nil (26361 10784 829734 74000) 0 nil])
([nil nil ((#("void make_sendable_with_metadata(CommunicationData & c) {
  c.start_byte = START_BYTE;
  c.end_byte = END_BYTE;
  
}

" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face font-lock-function-name-face fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 12 (face font-lock-function-name-face fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (face font-lock-function-name-face fontified t) 27 28 (face font-lock-function-name-face fontified t) 28 29 (face font-lock-function-name-face fontified t) 29 30 (face font-lock-function-name-face fontified t) 30 31 (face font-lock-function-name-face fontified t) 31 32 (face font-lock-function-name-face fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) c-type c-decl-arg-start fontified t) 33 50 (face font-lock-type-face fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (face font-lock-variable-name-face fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 58 (fontified t) 58 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 114 (fontified t) 114 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-1-face) fontified t) 116 117 (fontified t) 117 118 (fontified t)) . 1227) (undo-tree-id726 . -117) (undo-tree-id727 . -117) (undo-tree-id728 . -117) (undo-tree-id729 . 4) (undo-tree-id730 . 4) (undo-tree-id731 . -114)) nil (26361 10827 867274 558000) 0 nil] [nil nil ((#("  c.start_byte = START_BYTE;
  c.end_byte = END_BYTE;
  
}

" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t) 59 60 (fontified t)) . 1285) (undo-tree-id117 . -59) (undo-tree-id118 . -59) (undo-tree-id119 . -59) (undo-tree-id120 . 4) (undo-tree-id121 . 4) (undo-tree-id122 . -55) (undo-tree-id123 . -55) (undo-tree-id124 . -55) (undo-tree-id125 . -55) (undo-tree-id126 . -55) (undo-tree-id127 . -55) (undo-tree-id128 . -55) (undo-tree-id129 . -55) (undo-tree-id130 . -55) (undo-tree-id131 . -55) (undo-tree-id132 . -55) (undo-tree-id133 . -55) (undo-tree-id134 . -55) (undo-tree-id135 . -55) (undo-tree-id136 . -55) (undo-tree-id137 . -55) (undo-tree-id138 . -55) (undo-tree-id139 . -55) (undo-tree-id140 . -55) (undo-tree-id141 . -55) (undo-tree-id142 . -55) (undo-tree-id143 . -55) (undo-tree-id144 . -55) (undo-tree-id145 . -55) (undo-tree-id146 . -55) (undo-tree-id147 . -55) (undo-tree-id148 . -57) (undo-tree-id149 . -57) (undo-tree-id150 . -57) (undo-tree-id151 . -57) (undo-tree-id152 . -57) (undo-tree-id153 . -57) (undo-tree-id154 . -57) (undo-tree-id155 . -57) (undo-tree-id156 . -57) (undo-tree-id157 . -57) (undo-tree-id158 . -57) (undo-tree-id159 . -57) (undo-tree-id160 . -57) (undo-tree-id161 . -57) (undo-tree-id162 . -57) (undo-tree-id163 . -57) (undo-tree-id164 . -57) (undo-tree-id165 . -57) (undo-tree-id166 . -57) (undo-tree-id167 . -57) (undo-tree-id168 . -57) (undo-tree-id169 . -57) (undo-tree-id170 . -57) (undo-tree-id171 . -57) (undo-tree-id172 . -57) (undo-tree-id173 . -57) (undo-tree-id174 . -57) (undo-tree-id175 . -57) (undo-tree-id176 . -57) (undo-tree-id177 . -57) (undo-tree-id178 . -57) (undo-tree-id179 . -57) (undo-tree-id180 . -57) (undo-tree-id181 . -57) (undo-tree-id182 . -57) (undo-tree-id183 . -57) (undo-tree-id184 . -57) (undo-tree-id185 . -57) (undo-tree-id186 . -57) (undo-tree-id187 . -59) (undo-tree-id188 . -59) (undo-tree-id189 . -59) (undo-tree-id190 . -59) (undo-tree-id191 . -59) (undo-tree-id192 . -59) (undo-tree-id193 . -59) (undo-tree-id194 . -59) (undo-tree-id195 . -59) (undo-tree-id196 . -59) (undo-tree-id197 . -59) (undo-tree-id198 . -59) (undo-tree-id199 . -59) (undo-tree-id200 . -59) (undo-tree-id201 . -59) (undo-tree-id202 . -59) (undo-tree-id203 . -59) (undo-tree-id204 . -59) (undo-tree-id205 . -59) (undo-tree-id206 . -59) (undo-tree-id207 . -59) (undo-tree-id208 . -59) (undo-tree-id209 . -59) (undo-tree-id210 . -59) (undo-tree-id211 . -59) (undo-tree-id212 . -59) (undo-tree-id213 . -59) (undo-tree-id214 . -59) (undo-tree-id215 . -59) (undo-tree-id216 . -59) (undo-tree-id217 . -59) (undo-tree-id218 . -59) (undo-tree-id219 . -59) (undo-tree-id220 . -59) (undo-tree-id221 . -59) (undo-tree-id222 . -59) (undo-tree-id223 . -59) (undo-tree-id224 . -59) (undo-tree-id225 . -59) (undo-tree-id226 . -59) (undo-tree-id227 . -59) (undo-tree-id228 . -59) (undo-tree-id229 . -59) (undo-tree-id230 . -59) (undo-tree-id231 . -59) (undo-tree-id232 . -59) (undo-tree-id233 . -59) (undo-tree-id234 . -59) (undo-tree-id235 . -57) (undo-tree-id236 . -57) (undo-tree-id237 . -57) (undo-tree-id238 . -57) (undo-tree-id239 . -57) (undo-tree-id240 . -57) (undo-tree-id241 . -57) (undo-tree-id242 . -57) (undo-tree-id243 . -57) (undo-tree-id244 . -57) (undo-tree-id245 . -57) (undo-tree-id246 . -57) (undo-tree-id247 . -57) (undo-tree-id248 . -57) (undo-tree-id249 . -57) (undo-tree-id250 . -57) (undo-tree-id251 . -57) (undo-tree-id252 . -57) (undo-tree-id253 . -57) (undo-tree-id254 . -57) (undo-tree-id255 . -57) (undo-tree-id256 . -57) (undo-tree-id257 . -57) (undo-tree-id258 . -57) (undo-tree-id259 . -57) (undo-tree-id260 . -57) (undo-tree-id261 . -57) (undo-tree-id262 . -57) (undo-tree-id263 . -57) (undo-tree-id264 . -57) (undo-tree-id265 . -57) (undo-tree-id266 . -57) (undo-tree-id267 . -57) (undo-tree-id268 . -57) (undo-tree-id269 . -57) (undo-tree-id270 . -57) (undo-tree-id271 . -57) (undo-tree-id272 . -57) (undo-tree-id273 . -57) (undo-tree-id274 . -57) (undo-tree-id275 . -57) (undo-tree-id276 . -57) (undo-tree-id277 . -57) (undo-tree-id278 . -57) (undo-tree-id279 . -57) (undo-tree-id280 . -54) (undo-tree-id281 . -54) (undo-tree-id282 . -54) (undo-tree-id283 . -54) (undo-tree-id284 . -54) (undo-tree-id285 . -54) (undo-tree-id286 . -54) (undo-tree-id287 . -54) (undo-tree-id288 . -54) (undo-tree-id289 . -54) (undo-tree-id290 . -54) (undo-tree-id291 . -54) (undo-tree-id292 . -54) (undo-tree-id293 . -54) (undo-tree-id294 . -54) (undo-tree-id295 . -54) (undo-tree-id296 . -54) (undo-tree-id297 . -54) (undo-tree-id298 . -54) (undo-tree-id299 . -54) (undo-tree-id300 . -54) (undo-tree-id301 . -54) (undo-tree-id302 . -54) (undo-tree-id303 . -54) (undo-tree-id304 . -54) (undo-tree-id305 . -54) (undo-tree-id306 . -54) (undo-tree-id307 . -54) (undo-tree-id308 . -54) (undo-tree-id309 . -54) (undo-tree-id310 . -54) (undo-tree-id311 . -54) (undo-tree-id312 . -54) (undo-tree-id313 . -54) (undo-tree-id314 . -54) (undo-tree-id315 . -54) (undo-tree-id316 . -29) (undo-tree-id317 . -29) (undo-tree-id318 . -29) (undo-tree-id319 . -29) (undo-tree-id320 . -29) (undo-tree-id321 . -29) (undo-tree-id322 . -29) (undo-tree-id323 . -29) (undo-tree-id324 . -29) (undo-tree-id325 . -29) (undo-tree-id326 . -29) (undo-tree-id327 . -29) (undo-tree-id328 . -29) (undo-tree-id329 . -29) (undo-tree-id330 . -29) (undo-tree-id331 . -29) (undo-tree-id332 . -29) (undo-tree-id333 . -29) (undo-tree-id334 . -29) (undo-tree-id335 . -29) (undo-tree-id336 . -29) (undo-tree-id337 . -29) (undo-tree-id338 . -29) (undo-tree-id339 . -29) (undo-tree-id340 . -29) (undo-tree-id341 . -29) (undo-tree-id342 . -29) (undo-tree-id343 . -29) (undo-tree-id344 . -29) (undo-tree-id345 . -29) (undo-tree-id346 . -29) (undo-tree-id347 . -29) (undo-tree-id348 . -29) (undo-tree-id349 . -29) (undo-tree-id350 . -29) (undo-tree-id351 . -29) (undo-tree-id352 . -56) (undo-tree-id353 . -60)) ((1285 . 1345)) (26361 10784 827653 119000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3558 . 3559) (nil fontified nil 3441 . 3559) (3441 . 3559)) nil (26361 10827 867272 32000) 0 nil])
nil
([nil nil ((3591 . 3592) (3584 . 3591) (#("uin" 0 3 (fontified nil)) . 3584) (3584 . 3587) (#("uint8_t" 0 7 (fontified nil)) . -3584) (undo-tree-id607 . -7) (3584 . 3591) (#("uin" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3584) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . -3) (undo-tree-id711 . -3) (undo-tree-id712 . -3) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) 3587 (3584 . 3587) (3584 . 3585) (#("uint8_t *data" 0 7 (face font-lock-type-face fontified nil) 7 9 (fontified nil) 9 13 (face font-lock-variable-name-face fontified nil)) . 3584) (undo-tree-id719 . -13) (3583 . 3584) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3583 3595 nil nil nil t #s(yas--field 2 3597 3622 nil nil nil t nil)) #s(yas--field 2 3597 3622 nil nil nil t nil)) nil 28 nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil nil)) (3563 . 3609) (#("calculate_cr8x_fast(${1:uint8_t *data}, ${2:size_t len})" 0 56 (fontified nil)) . 3563) (3563 . 3619) (#("cal" 0 3 (fontified nil)) . 3563) (3563 . 3566) (#("calculate_cr8x_fast(uint8_t *data, size_t len)" 0 46 (fontified nil)) . -3563) (undo-tree-id720 . -46) (3563 . 3609) (#("cal" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3563) (undo-tree-id721 . -3) (undo-tree-id722 . -3) 3566 (3560 . 3566) (3557 . 3560) (#("crc" 0 3 (fontified nil)) . -3557) (undo-tree-id723 . -3) (3557 . 3560) (#("cr" 0 1 (fontified t) 1 2 (fontified t)) . -3557) (undo-tree-id724 . -2) (undo-tree-id725 . -2) 3559 (3555 . 3559) (3553 . 3555) (#("  " 0 2 (fontified t)) . 3553)) nil (26361 10827 867268 953000) 0 nil])
([nil nil ((3604 . 3605) (#("d" 0 1 (fontified t)) . -3604) (undo-tree-id581 . -1) (undo-tree-id582 . -1) 3605 (3604 . 3605) (apply yas--snippet-revive 3597 3605 #s(yas--snippet nil nil #s(yas--exit 3604 nil) 29 nil nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3604 nil) 29 nil nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil)) (3597 . 3605) (#("sizeof($0)" 0 10 (fontified nil)) . 3597) (undo-tree-id583 . -10) (3597 . 3607) (#("si" 0 2 (fontified nil)) . 3597) (undo-tree-id584 . -2) (3597 . 3599) (#("sizeof(expression-or-type)" 0 26 (fontified nil)) . -3597) (undo-tree-id585 . -26) (undo-tree-id586 . -26) (3597 . 3623) (#("si" 0 1 (fontified t) 1 2 (fontified t)) . -3597) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) 3599 (3598 . 3599) (#("size_t len" 0 10 (fontified nil)) . 3598) (undo-tree-id590 . -10) (3597 . 3598) (3594 . 3595) (#("c" 0 1 (fontified nil)) . 3594) (undo-tree-id591 . -1) (3594 . 3595) (#("c" 0 1 (fontified t)) . -3594) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) 3595 (3594 . 3595) (#("d" 0 1 (fontified t)) . -3594) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) 3595 (3594 . 3595) (#("d" 0 1 (fontified t)) . -3594) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#("a" 0 1 (fontified t)) . -3595) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) 3596 (3593 . 3596) (#("*" 0 1 (fontified t)) . -3593) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) 3594 (3593 . 3594)) nil (26361 10827 867107 816000) 0 nil])
([nil nil ((3618 . 3621) (#("crc" 0 3 (fontified nil)) . -3618) (undo-tree-id418 . -3) (3618 . 3621) (#("c" 0 1 (fontified t)) . -3618) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 3619 (3618 . 3619) (#("e" 0 1 (fontified t)) . -3618) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("n" 0 1 (fontified t)) . -3619) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 3620 (3618 . 3620) (3616 . 3618) (apply yas--snippet-revive 3609 3617 #s(yas--snippet nil nil #s(yas--exit 3616 nil) 30 nil nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3616 nil) 30 nil nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil)) (3609 . 3617) (#("sizeof($0)" 0 10 (fontified nil)) . 3609) (undo-tree-id574 . -10) (3609 . 3619) (#("si" 0 2 (fontified nil)) . 3609) (undo-tree-id575 . -2) (3609 . 3611) (#("sizeof(expression-or-type)" 0 26 (fontified nil)) . -3609) (undo-tree-id576 . -26) (undo-tree-id577 . -26) (3609 . 3635) (#("si" 0 1 (fontified t) 1 2 (fontified t)) . -3609) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) 3611 (3606 . 3611)) nil (26361 10827 867085 475000) 0 nil])
([nil current ((3623 . 3624) (apply yas--snippet-revive 3563 3623 #s(yas--snippet nil (#s(yas--field 1 3583 3595 nil nil nil t #s(yas--field 2 3597 3622 nil nil nil t nil)) #s(yas--field 2 3597 3622 nil nil nil t nil)) nil 28 nil #s(yas--field 2 3597 3622 nil nil nil t nil) nil nil))) nil (26361 10827 866937 333000) 0 nil])
nil
